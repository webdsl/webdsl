module org/webdsl/dsl/to-java-servlet/web-xml

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front

rules

  generate-code-java-servlet-once: _ ->
    <emit-web-xml; fail>
    $[<?xml version="1.0" ?>
      <web-app version="2.4"
          xmlns="http://java.sun.com/xml/ns/j2ee"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

        <display-name>[ appname ]</display-name>

        <description>[ appname ]</description>

        <welcome-file-list>
            <welcome-file>root</welcome-file>
        </welcome-file-list>
	    <listener>
	        <display-name>ImageIO service provider loader/unloader</display-name>
	        <listener-class>com.twelvemonkeys.servlet.image.IIOProviderContextListener</listener-class>
	    </listener>
        <servlet>
          <servlet-name>jcaptcha</servlet-name>
          <servlet-class>utils.ImageCaptchaServlet</servlet-class>
          <load-on-startup>0</load-on-startup>
        </servlet>
        <servlet-mapping>
          <servlet-name>jcaptcha</servlet-name>
          <url-pattern>/jcaptcha</url-pattern>
        </servlet-mapping>

        <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>/robots.txt</url-pattern>
        </servlet-mapping>
        <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>/favicon.ico</url-pattern>
        </servlet-mapping>
        <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>/manifest.json</url-pattern>
        </servlet-mapping>
        <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>/site.webmanifest</url-pattern>
        </servlet-mapping>
        <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>/images/*</url-pattern>
        </servlet-mapping>
        <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>/javascript/*</url-pattern>
        </servlet-mapping>
        <servlet-mapping>
          <servlet-name>default</servlet-name>
          <url-pattern>/stylesheets/*</url-pattern>
        </servlet-mapping>

        <servlet>
          <servlet-name>mainservlet</servlet-name>
          <servlet-class>utils.DispatchServlet</servlet-class>
        </servlet>
        <servlet-mapping>
          <servlet-name>mainservlet</servlet-name>
          <url-pattern>/</url-pattern>
        </servlet-mapping>

        <error-page>
          <error-code>404</error-code>
          <location>/pagenotfound</location>
        </error-page>

      <filter>
        <filter-name>ExpiresFilter</filter-name>
        <filter-class>fr.xebia.servlet.filter.ExpiresFilter</filter-class>
        <init-param>
          <param-name>ExpiresByType image</param-name>
          <param-value>access plus 7 days</param-value>
        </init-param>
        <init-param>
          <param-name>ExpiresByType text/css</param-name>
          <param-value>access plus 7 days</param-value>
        </init-param>
        <init-param>
          <param-name>ExpiresByType application/javascript</param-name>
          <param-value>access plus 7 days</param-value>
        </init-param>
        <!-- backwards compatibility -->
          <init-param>
            <param-name>ExpiresByType text/javascript</param-name>
            <param-value>access plus 7 days</param-value>
          </init-param>
      </filter>
      <filter-mapping>
        <filter-name>ExpiresFilter</filter-name>
        <url-pattern>/stylesheets/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
      </filter-mapping>
      <filter-mapping>
        <filter-name>ExpiresFilter</filter-name>
        <url-pattern>/javascript/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
      </filter-mapping>
      <filter-mapping>
        <filter-name>ExpiresFilter</filter-name>
        <url-pattern>/images/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
      </filter-mapping>
      <filter-mapping>
        <filter-name>ExpiresFilter</filter-name>
        <url-pattern>/favicon.ico</url-pattern>
        <dispatcher>REQUEST</dispatcher>
      </filter-mapping>
      [ expiresFilters ]
      </web-app>
    ]
    with  appname := <AppName>
     ; expiresFilters := <map({\
            x ->
            $[
        <filter-mapping>
          <filter-name>ExpiresFilter</filter-name>
          <url-pattern>[ pattern ]</url-pattern>
          <dispatcher>REQUEST</dispatcher>
        </filter-mapping>
            ]
          with pattern := <concat-strings> ["/",x,"/*"]
         \});concat-strings>
  <bagof-AllPageWithExpireCacheNames;map(get-anno(?OriginalNameAnno(<id>)));make-set>

signature constructors Comment : Term -> Term
