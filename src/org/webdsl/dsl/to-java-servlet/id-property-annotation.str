module org/webdsl/dsl/to-java-servlet/id-property-annotation

imports
  libstrategolib
  
imports
  libwebdsl-front
  libback-end-transformations
  org/webdsl/dsl/to-java-servlet/emit-java

rules

  gen-unique-function-for-id-prop :
    (x_Class,x,s) -> <emit-java-code-local> compilation-unit|[
      package pkgname;
  
      @Partial
      public class x_Class {
        public static t1 _static_getUnique#_(t ident){
          t1 result = (x1)
            ~e:(e_HibSession()).createCriteria(t1.class)
            .add(org.hibernate.criterion.Restrictions.eq("_"+"~x", ident)).uniqueResult();
          if(result != null){
            return result;
          }
          else{
            t1 newObject = x1._static_createEmpty_();
            newObject.set#x#NoEventsOrValidation(ident);
            ~e:(e_HibSession()).save(newObject);
            ~e:(e_HibSession()).flush();
            return newObject;
          }
        }
        
        public static boolean _static_isUnique#_(t1 object){
          java.util.List<t1> results = (java.util.List<x1>)
            ~e:(e_HibSession()).createCriteria(t1.class)
            .add(org.hibernate.criterion.Restrictions.eq("_"+"~x", object.get#x())).list();
          if(
          	results.size() > 1 // 2 persisted entities indicate the passed object was persisted, but there is a conflict
         || results.size() == 1 && !results.get(0).getId().equals(object.getId()) // object is not persisted but conflicts with persisted entity
          ){
            return false;
          }
          else{
            return true;
          }
        }
        
        public static boolean _static_isUniqueId#_(t ident){
          t1 temp = x1._static_createEmpty_();
          temp.set#x#NoEventsOrValidation(ident);
           return _static_isUnique_(temp);
        }
        
        public static boolean _static_isUniqueId#_(t ident, t1 object){
          t1 tempobject = new x1(); // create a dummy object so the real object doesn't become dirty for hibernate
          tempobject.setId(object.getId());
          tempobject.set#x#NoEventsOrValidation(ident);
          return _static_isUnique_(tempobject);
        }
      }
    ]|
    with  pkgname := <DomainPackage>
        ; t := <java-type> s
        ; t1 := <java-type-entity> x_Class
        ; x1 := <java-type-entity-name> x_Class
