module org/webdsl/dsl/to-java-servlet/uicomponents/form

imports
  libstratego-lib
  libjava-front
  libwebdsl-front
  org/webdsl/dsl/to-java-servlet/uicomponents/navigate
  org/webdsl/dsl/to-java-servlet/template-render
  org/webdsl/dsl/to-java-servlet/template-action-inputs
  org/webdsl/dsl/to-java-servlet/ajax/html-utils
  org/webdsl/dsl/to-java-servlet/core-to-java-servlet
  org/webdsl/dsl/to-java-servlet/control-flow-to-java-servlet

rules // forms

  element-to-java-servlet = ?TemplateCall("form",[],_,_); all-phases-form(fail)
  element-to-java-servlet = ?TemplateCall("dynamicform",[],_,_); all-phases-form(id)

  all-phases-form(dynamic) :
    tc@TemplateCall(_, _, passign*, elems) ->
    bstm* |[
      ~*<if not(dynamic) then id else ![] end>bstm*|[
        if(threadLocalPageCached.isInForm()){
          org.webdsl.logging.Logger.error("Invalid nested <form> tag detected in DOM at URL: "+threadLocalPageCached.getRequestURL()
            +"\n Enclosing form found in "+threadLocalPageCached.getEnclosingForm()
            +"\n Nested form found in "+getTemplateSignature());
        }
      ]|
      threadLocalPageCached.enterForm(getTemplateSignature());

      ident = e_ident;
      threadLocalPageCached.setFormIdent(ident);//for actionLink javascript code and ajax actions  //TODO breaks with nested forms, use stack
      // need to set formident also in databind phase, so template calls that get initialized during this phase don't result in having broken ajax action links (rerender placeholders)

      if(threadLocalPageCached.getParammap().get(ident) != null){
        threadLocalPageCached.setInSubmittedForm(true); // ok, because no nested forms, otherwise need to count just like inForLoop variable
        threadLocalPageCached.submittedFormId = ident;
      }

      java.io.StringWriter x_stringwrvalid = null;
      java.io.StringWriter x_stringwr = null;
      if(RENDER_PHASE == phase){
        threadLocalPageCached.formRequiresMultipartEnc = false;

        if(threadLocalPageCached.inSubmittedForm() && threadLocalPageCached.isValidationFormRerender()){
          x_stringwrvalid = new java.io.StringWriter();
          out = new java.io.PrintWriter(x_stringwrvalid);
          utils.ThreadLocalOut.push(out);
        }

        out.print("<form name=\""+ident+"\" id=\""+ident+
          "\" action=\""+e_resulturl+
          "\" accept-charset=\"UTF-8\" method=\"POST\"");
        ~bstm:bstm_attr
        //create temporary out stream so the decision for multipart enctype can be made after handling the contents of the form
        x_stringwr = new java.io.StringWriter();
        out = new java.io.PrintWriter(x_stringwr);
        utils.ThreadLocalOut.push(out);

        out.print(">");
        out.print("<input type=\"hidden\" name=\""+ident+"\" value=\"1\" />");
        ~*<if dynamic then id else ![] end> bstm*|[ out.print("<input type=\"hidden\" name=\"dynamicform\" value=\"1\" />"); ]|
        out.print(threadLocalPageCached.getHiddenParams()); // page arguments
      }
      if(RENDER_PHASE == phase || threadLocalPageCached.inSubmittedForm()){ // only handle databind, validate, action phases when current form is part of submitted data
        bstm*
      }
      if(RENDER_PHASE == phase){
        out.print("</form>");

        //set 'out' back to the original out stream
        utils.ThreadLocalOut.popChecked(out);
        out = utils.ThreadLocalOut.peek();
        if(threadLocalPageCached.formRequiresMultipartEnc){
          out.write(" enctype=\"multipart/form-data\"");
        }
        out.write(x_stringwr.toString());

        if(threadLocalPageCached.inSubmittedForm() && threadLocalPageCached.isValidationFormRerender()){
          utils.ThreadLocalOut.pop();
          if(threadLocalPageCached.submittedFormContent==null){ //render phase with changed data, store form output
            threadLocalPageCached.submittedFormContent = x_stringwrvalid.toString();
          }
          else{ //render phase with current persisted data, retrieve stored form output
            out = utils.ThreadLocalOut.peek();
            out.write(threadLocalPageCached.submittedFormContent);
          }
        }

        threadLocalPageCached.formRequiresMultipartEnc = false;
      }
      threadLocalPageCached.setInSubmittedForm(false);

      threadLocalPageCached.setFormIdent("");
      threadLocalPageCached.leaveForm();
    ]|
    with  bstm* := <elements-to-java-servlet> elems
        ; formident := <get-formnumber> tc
        ; bstm_attr := <to-html-attrs-include-collection(|"form")> passign*
        ; x_stringwr := <newname-webdsl> "sw"
        ; x_stringwrvalid := <newname-webdsl> "sw"
        ; e_resulturl := java:expr |[ utils.HTMLFilter.filter(threadLocalPageCached.getPageUrlWithParams() + threadLocalPageCached.getExtraQueryArguments("?")) ]|
        ; e_ident := <for-loop-counter-wrap-code-expr> java:expr|["~formident"+getUniqueId()]|


