module org/webdsl/dsl/to-java-servlet/test/test-web

imports
  libstrategolib
  libjava-front

imports
  libwebdsl-front
  org/webdsl/dsl/to-java-servlet/to-java-servlet

strategies

  generate-code-java-servlet-once = if-test(generate-test-web); fail

  generate-test-web: _ ->
     <emit-java-code; fail> compilation-unit|[
       package utils;

       import pkgname.*;

       public class TestWeb extends utils.TestAll
       {
          public TestWeb () {

          }

          public void runTests(){
            boolean exitWithError = false;

            bstm*

            beforeQuit();

            if(exitWithError){
              System.exit(1);
            } else {
              System.exit(0);
            }
          }

          public static void main(String[] args) {
            new TestWeb().runInWebAppContainer(true,false, 500000L);
          }
       }
     ]|
     with pkgname := <TestPackage>
        ; pkgname2 := <TemplatePackage>
        ; names := <bagof-AllTestNames <+ ![]>
        ; bstm* := <map(gen-call-test-web-class);concat> names

  gen-call-test-web-class :
    name ->
      bstm*|[
        x_name x_var = new x_name();
        utils.ThreadLocalTest.set(x_var);
        x_var.closeTransactionBecauseOfSqliteConcurrencyLimitation = true;
        //x_var.setWebClient(new HtmlUnitDriver()); //use HTMLUnit for now, but webdriver also supports using external browsers such as firefox
        exitWithError = !x_var.run() || exitWithError;
        utils.ThreadLocalTest.set(null);
      ]|
    with  x_name := <get-webdsl-test-class-name> name
        ; x_var := <concat-strings> ["varTest", name]

