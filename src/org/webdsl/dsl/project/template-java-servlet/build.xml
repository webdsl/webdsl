<project name="webdsl-app" default="compile">
  <import file="build.reindex.xml" />
  <!-- basedir can be both WebContent or .servletapp, but some files are always in .servletapp -->
  <property name="servletappdir" value="${basedir}"/>
  
  <loadproperties srcFile="${servletappdir}/build.properties"/>
  <fail unless="generate-dir"/>
  
  <property name="librarydir" value="../${generate-dir}/WEB-INF/lib"/>
  <property name="binjavadir" value="../${generate-dir}/WEB-INF/classes"/>
  
  <property name="sourcedir" value="${servletappdir}/src-generated"/>
  <property name="templatesourcedir" value="${servletappdir}/src-template"/>
  <property name="tomcatdir" value="${servletappdir}/tomcat"/>
  <property name="templatetestlibdir" value="${webdsl.template}/lib-test"/>
  <path id="nativejava">
    <dirset dir=".." includes="**/nativejava" />
  </path>
  
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
  <classpath>
    <pathelement location="${templatetestlibdir}/ant-contrib-1.0b3.jar"/>
  </classpath>
</taskdef>

<if>
  <equals arg1="${currentdir}" arg2="$${currentdir}"/>
  <then>
    <property name="compiledir" value="."/>
  </then>
  <else>
    <property name="compiledir" value="${currentdir}/.servletapp"/>
  </else>
</if>

<taskdef name="tomcat_deploy" classname="org.apache.catalina.ant.DeployTask">
  <classpath>
    <pathelement location="${templatetestlibdir}/catalina-ant.jar"/>
  </classpath>
</taskdef>
<taskdef name="tomcat_undeploy" classname="org.apache.catalina.ant.UndeployTask">
  <classpath>
    <pathelement location="${templatetestlibdir}/catalina-ant.jar"/>
  </classpath>
</taskdef>

<path id="libraries">
  <fileset dir="${librarydir}" includes="*.jar"/>
</path>

<target name="clean">
  <delete dir="${binjavadir}"/>
  <mkdir dir="${binjavadir}"/>
</target>

<target name="compile" depends="copy-resources">
  <javac destdir="${binjavadir}"
  failonerror="true"
  classpathref="libraries"
  debug="on"
  fork="true"
  source="1.8"
  target="1.8"
  memoryinitialsize="256m"
  memorymaximumsize="${webdsl.javacmem}"
  includeantruntime="false">
  <!-- fork= and memory sizes fix problem with javac throwing outofmemory heap space exception caused by ant 64mb default limit -->
  <!-- verbose="yes">
  <compilerarg value="-Xlint"/> -->
  <!--<compilerarg value="-J-XX:+UseCompressedOops"/>-->
  <src path="${sourcedir}" />
  <src path="${templatesourcedir}" />
  <src refid="nativejava"/>
</javac>
<copy todir="${binjavadir}">
  <fileset dir="${templatesourcedir}">
    <exclude name="*.java" />
  </fileset>
  <fileset dir="..">
    <include name="**/nativejava/*"/>
    <exclude name=".servletapp/**"/>
    <exclude name="**/*.java"/>
  </fileset>
</copy>
</target>

<target name="instrument" depends="compile">
  <taskdef name="instrument" classname="org.hibernate.tool.instrument.javassist.InstrumentTask">
    <classpath>
      <fileset dir="${librarydir}" includes="*.jar"/>
    </classpath>
  </taskdef>
  
  <instrument verbose="true">
    <fileset dir="${binjavadir}/webdsl/generated/domain">
    <include name="*.class"/>
  </fileset>
</instrument>
</target>

<target name="convertoldglobals" depends="compile">
  <java classname="utils.ConvertOldGlobals" maxmemory="2048m" failonerror="true" dir="${compiledir}" fork="true">
    <classpath>
      <pathelement location="${binjavadir}"/>
      <fileset dir="${librarydir}" includes="*.jar"/>
    </classpath>
  </java>
</target>

<target name="check" depends="compile">

  <copy preservelastmodified="true" failonerror="false" todir="${binjavadir}/analyzerfiles">
    <fileset dir="${servletappdir}/analyzerfiles"><exclude name="*.app"/></fileset>
  </copy>

  <java classname="utils.TestAll" failonerror="true" dir="${compiledir}" fork="true">
    <classpath>
      <pathelement location="${binjavadir}"/>
      <pathelement location="${templatedir}"/>
      <fileset dir="${librarydir}" includes="*.jar"/>
    </classpath>
  </java>
</target>

<target name="copy-clean-tomcat">
  <copy preservelastmodified="true" todir="${tomcatdir}">
    <fileset dir="${webdsl.template}/tomcat"/>
  </copy>
  <antcall target="untar-tomcat"/>
  <copy preservelastmodified="false" file="${tomcatdir}/nohttps.server.xml" tofile="${tomcatdir}/tomcat/conf/server.xml" />
</target>

<target name="untar-tomcat">
  <unzip overwrite="false" src="${tomcatdir}/tomcat.zip" dest="${tomcatdir}/"/>
  <if><!-- if not in plugin, copy .keystore.  NOTE: the cargo jar was patched to include https configuration -->
  <equals arg1="${plugindir}" arg2="$${plugindir}" />
  <then>
    <copy overwrite="true" file="${webdsl.template}/tomcat/.keystore" todir="${servletappdir}/"/>
  </then>
</if>
</target>

<target name="check-web" depends="untar-tomcat, war">

  <copy preservelastmodified="true" failonerror="false" todir="${binjavadir}/analyzerfiles">
    <fileset dir="${servletappdir}/analyzerfiles"><exclude name="*.app"/></fileset>
  </copy>
  
  <java classname="utils.TestWeb" failonerror="true" dir="${compiledir}" fork="true">
    <classpath>
      <pathelement location="${binjavadir}"/>
      <fileset dir="${librarydir}" includes="*.jar"/>
    </classpath>
  </java>
</target>

<target name="run" depends="untar-tomcat, war">
  <java classname="utils.TestRun" failonerror="true" dir="${compiledir}" fork="true">
    <classpath>
      <pathelement location="${binjavadir}"/>
      <fileset dir="${librarydir}" includes="*.jar"/>
    </classpath>
  </java>
</target>

<target name="schema-export" depends="compile">
  <java classname="utils.SchemaExport" failonerror="true" dir="${compiledir}" fork="true">
    <classpath>
      <pathelement location="${binjavadir}"/>
      <fileset dir="${librarydir}" includes="*.jar"/>
    </classpath>
  </java>
</target>

<target name="copy-resources" depends="configure">
  <copy preservelastmodified="true" todir="${binjavadir}">
    <fileset dir="${sourcedir}">
      <exclude name="**/*.java"/>
    </fileset>
  </copy>
  <!--<copy preservelastmodified="true" todir="${bindir}/WEB-INF/lib">
  <fileset dir="${librarydir}">
    <exclude name="javaee.jar"/>
  </fileset>
</copy>
<copy preservelastmodified="true" todir="${bindir}/html">
<fileset dir="${servletappdir}/html"/>
</copy>
<copy preservelastmodified="true" todir="${bindir}/images">
<fileset dir="${servletappdir}/images"/>
</copy>
<copy preservelastmodified="true" todir="${bindir}/stylesheets">
<fileset dir="${servletappdir}/stylesheets"/>
</copy>
<copy preservelastmodified="true" todir="${bindir}/javascript">
<fileset dir="${servletappdir}/javascript"/>
</copy>
<copy preservelastmodified="true" todir="${bindir}">
  <fileset dir="${servletappdir}">
    <include name="webdsl-reindex"/>
    <include name="build.reindex.xml"/>
    <include name="build.properties"/>
    <include name="html/index.jsp"/>
    <include name="html/favicon.ico"/>
    <include name="build.properties"/>
  </fileset>
</copy>
<copy preservelastmodified="true" todir="${bindir}/WEB-INF">
<fileset dir="${servletappdir}">
  <include name="web.xml"/>
</fileset>
</copy>
<mkdir dir="${bindir}/META-INF"/>
<echo append="false" file="${bindir}/META-INF/MANIFEST.MF">Manifest-Version: 1.0</echo>-->
</target>

<target name="war" depends="compile">
  <war destfile="${webdsl.warfilename}.war" webxml="web.xml">
    <lib dir="${librarydir}">
      <exclude name="servlet-api.jar"/>
    </lib>
    <classes dir="${binjavadir}"/>
    <fileset dir="${servletappdir}">
      <include name="webdsl-reindex"/>
      <!--<include name="build.reindex.xml"/>-->
      <include name="*.html"/>
      <include name="*.htm"/>
      <include name="*.ico"/>
      <include name="*.jsp"/>
      <include name="robots.txt"/>
    </fileset>
    <zipfileset dir="${servletappdir}" includes="build.reindex.xml" fullpath="build.xml"/>
    <zipfileset dir="${servletappdir}/images" prefix="images"/>
    <zipfileset dir="${servletappdir}/stylesheets" prefix="stylesheets"/>
    <zipfileset dir="${servletappdir}/javascript" prefix="javascript"/>
    <zipfileset erroronmissingdir="false" dir="${servletappdir}/analyzerfiles" prefix="WEB-INF/classes/analyzerfiles"/>
  </war>
</target>

<target name="deploy" depends="war">
  <copy overwrite="true" file="${webdsl.warfilename}.war" todir="${webdsl.tomcat.path}/webapps"/>
</target>
<target name="undeploy">
  <delete file="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}.war"/>
  <delete dir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}"/>
</target>

<target name="tomcatdeploy" depends="war">
  <tomcat_deploy
  url="${webdsl.tomcat.manager}"
  username="${webdsl.tomcat.username}"
  password="${webdsl.tomcat.password}"
  update="true"
  path="/${webdsl.warfilename}"
  localWar="${servletappdir}/${webdsl.warfilename}.war" />
</target>
<target name="tomcatundeploy">
  <tomcat_undeploy
  url="${webdsl.tomcat.manager}"
  username="${webdsl.tomcat.username}"
  password="${webdsl.tomcat.password}"
  path="/${webdsl.warfilename}" />
</target>

<target name="deployfiles" depends="compile">
  <copy preservelastmodified="true" file="${servletappdir}/web.xml" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/WEB-INF"/>
  <copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/WEB-INF/lib">
  <fileset dir="${librarydir}">
    <exclude name="servlet-api.jar"/>
  </fileset>
</copy>
<copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/WEB-INF/classes">
<fileset dir="${binjavadir}"/>
</copy>
<copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/html">
<fileset dir="${servletappdir}/html"/>
</copy>
<copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/images">
<fileset dir="${servletappdir}/images"/>
</copy>
<copy preservelastmodified="true" failonerror="false" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/WEB-INF/classes">
<fileset dir="${servletappdir}/search/analyzerfiles"><exclude name="*.app"/></fileset>
</copy>
<copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/stylesheets">
<fileset dir="${servletappdir}/stylesheets"/>
</copy>
<copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/javascript">
<fileset dir="${servletappdir}/javascript"/>
</copy>
</target>

<target name="configure">
  <property file="${servletappdir}/sharding-strategy-to-insert.properties" />
  <copy overwrite="true" file="${templatesourcedir}/tpl_log4j.properties" tofile="${templatesourcedir}/log4j.properties">
  <filterchain><replacetokens>
    <token key="DEBUGLOG4J1" value="${webdsl.DEBUGLOG4J1}"/>
    <token key="DEBUGLOG4J2" value="${webdsl.DEBUGLOG4J2}"/>
    <token key="DEBUGLOG4JAPPNAME" value="${webdsl.appname}"/>
  </replacetokens></filterchain>
</copy>
<copy overwrite="true" file="${templatesourcedir}/tpl_tomcat.properties" tofile="${templatesourcedir}/tomcat.properties">
<filterchain><replacetokens>
  <token key="HTTPSPORT" value="${webdsl.tomcat.https.port}"/>
  <token key="HTTPPORT" value="${webdsl.tomcat.http.port}"/>
</replacetokens></filterchain>
</copy>
<copy overwrite="true" file="${templatesourcedir}/tpl_email.properties" tofile="${templatesourcedir}/email.properties">
<filterchain><replacetokens>
  <token key="SMTPHOST" value="${webdsl.SMTPHOST}"/>
  <token key="SMTPPORT" value="${webdsl.SMTPPORT}"/>
  <token key="SMTPUSER" value="${webdsl.SMTPUSER}"/>
  <token key="SMTPPASS" value="${webdsl.SMTPPASS}"/>
  <token key="SMTPSSL" value="${webdsl.SMTPSSL}"/>
  <token key="SMTPTLS" value="${webdsl.SMTPTLS}"/>
  <token key="SMTPPROTOCOL" value="${webdsl.SMTPPROTOCOL}"/>
  <token key="SMTPAUTHENTICATE" value="${webdsl.SMTPAUTHENTICATE}"/>
</replacetokens></filterchain>
</copy>
<if>
  <equals arg1="${webdsl.DB}" arg2="sqlite" />
  <then>
    <echo message="configuring for using Sqlite database file"/>
    <copy overwrite="true" file="${templatesourcedir}/tpl_hibernatesqlite.properties" tofile="${templatesourcedir}/hibernate.properties">
    <filterchain><replacetokens>
      <token key="DBFILEOPTION" value="${webdsl.DBFILEOPTION}"/>
      <token key="DEBUGHIBERNATE" value="${webdsl.DEBUGHIBERNATE}"/>
      <token key="DBMODE" value="${webdsl.DBMODE}"/>
      <token key="INDEXDIR" value="${webdsl.INDEXDIR}"/>
      <token key="SEARCHSTATS" value="${webdsl.SEARCHSTATS}"/>
      <token key="INDEXSHARDING" value="${indexshardingdef}"/>
      <token key="EHCACHETIMEOUT" value="${webdsl.EHCACHETIMEOUT}"/>
      <token key="EHCACHEDISKSTORE" value="${webdsl.EHCACHEDISKSTORE}"/>
    </replacetokens></filterchain>
  </copy>
</then>
<elseif>
  <equals arg1="${webdsl.DB}" arg2="h2" />
  <then>
    <echo message="configuring for using H2 database file"/>
    <copy overwrite="true" file="${templatesourcedir}/tpl_hibernateh2.properties" tofile="${templatesourcedir}/hibernate.properties">
    <filterchain><replacetokens>
      <token key="DBFILEOPTION" value="${webdsl.DBFILEOPTION};FILE_LOCK=NO"/>
      <token key="DEBUGHIBERNATE" value="${webdsl.DEBUGHIBERNATE}"/>
      <token key="DBMODE" value="${webdsl.DBMODE}"/>
      <token key="INDEXDIR" value="${webdsl.INDEXDIR}"/>
      <token key="SEARCHSTATS" value="${webdsl.SEARCHSTATS}"/>
      <token key="INDEXSHARDING" value="${indexshardingdef}"/>
      <token key="EHCACHETIMEOUT" value="${webdsl.EHCACHETIMEOUT}"/>
      <token key="EHCACHEDISKSTORE" value="${webdsl.EHCACHEDISKSTORE}"/>
    </replacetokens></filterchain>
  </copy>
</then>
</elseif>
<elseif>
  <equals arg1="${webdsl.DB}" arg2="h2mem" />
  <then>
    <echo message="configuring for using H2 in-memory database"/>
    <copy overwrite="true" file="${templatesourcedir}/tpl_hibernateh2.properties" tofile="${templatesourcedir}/hibernate.properties">
    <filterchain><replacetokens>
      <token key="DBFILEOPTION" value="mem:testdb"/>
      <token key="DEBUGHIBERNATE" value="${webdsl.DEBUGHIBERNATE}"/>
      <token key="DBMODE" value="${webdsl.DBMODE}"/>
      <token key="INDEXDIR" value="${webdsl.INDEXDIR}"/>
      <token key="SEARCHSTATS" value="${webdsl.SEARCHSTATS}"/>
      <token key="INDEXSHARDING" value="${indexshardingdef}"/>
      <token key="EHCACHETIMEOUT" value="${webdsl.EHCACHETIMEOUT}"/>
      <token key="EHCACHEDISKSTORE" value="${webdsl.EHCACHEDISKSTORE}"/>
    </replacetokens></filterchain>
  </copy>
</then>
</elseif>
<elseif>
  <equals arg1="${webdsl.DB}" arg2="jndi" />
  <then>
    <echo message="configuring for using a JNDI datasource"/>
    <copy overwrite="true" file="${templatesourcedir}/tpl_hibernatejndi.properties" tofile="${templatesourcedir}/hibernate.properties">
    <filterchain><replacetokens>
      <token key="DBSTORAGEOPTION" value="${webdsl.DBSTORAGEOPTION}"/>
      <token key="DEBUGHIBERNATE" value="${webdsl.DEBUGHIBERNATE}"/>
      <token key="DBMODE" value="${webdsl.DBMODE}"/>
      <token key="DBJNDIPATH" value="${webdsl.DBJNDIPATH}"/>
      <token key="DBSERVER" value="${webdsl.DBSERVER}"/>
      <token key="INDEXDIR" value="${webdsl.INDEXDIR}"/>
      <token key="SEARCHSTATS" value="${webdsl.SEARCHSTATS}"/>
      <token key="EHCACHETIMEOUT" value="${webdsl.EHCACHETIMEOUT}"/>
      <token key="EHCACHEDISKSTORE" value="${webdsl.EHCACHEDISKSTORE}"/>
    </replacetokens></filterchain>
  </copy>
</then>
</elseif>
<elseif>
  <equals arg1="${webdsl.DB}" arg2="mysql-replication" />
  <then>
    <echo message="configuring for using Mysql database using replication"/>
    <copy overwrite="true" file="${templatesourcedir}/tpl_hibernate.properties" tofile="${templatesourcedir}/hibernate.properties">
    <filterchain><replacetokens>
      <token key="DBSTORAGEOPTION" value="${webdsl.DBSTORAGEOPTION}"/>
      <token key="DBDRIVERCLASS" value="com.mysql.jdbc.ReplicationDriver"/>
      <token key="DBJDBCOPTIONS" value="&amp;autoReconnect=true&amp;roundRobinLoadBalance=true"/>
      <token key="DEBUGHIBERNATE" value="${webdsl.DEBUGHIBERNATE}"/>
      <token key="DBMODE" value="${webdsl.DBMODE}"/>
      <token key="DBSERVER" value="${webdsl.DBSERVER}"/>
      <token key="DBNAME" value="${webdsl.DBNAME}"/>
      <token key="DBUSER" value="${webdsl.DBUSER}"/>
      <token key="DBPASSWORD" value="${webdsl.DBPASSWORD}"/>
      <token key="INDEXDIR" value="${webdsl.INDEXDIR}"/>
      <token key="SEARCHSTATS" value="${webdsl.SEARCHSTATS}"/>
      <token key="INDEXSHARDING" value="${indexshardingdef}"/>
      <token key="EHCACHETIMEOUT" value="${webdsl.EHCACHETIMEOUT}"/>
      <token key="EHCACHEDISKSTORE" value="${webdsl.EHCACHEDISKSTORE}"/>
    </replacetokens></filterchain>
  </copy>
</then>
</elseif>
<elseif>
  <equals arg1="${webdsl.DB}" arg2="postgres" />
  <then>
    <echo message="configuring for using PostgreSQL database"/>
    <copy overwrite="true" file="${templatesourcedir}/tpl_hibernatepostgres.properties" tofile="${templatesourcedir}/hibernate.properties">
    <filterchain><replacetokens>
      <token key="DEBUGHIBERNATE" value="${webdsl.DEBUGHIBERNATE}"/>
      <token key="DBMODE" value="${webdsl.DBMODE}"/>
      <token key="DBSERVER" value="${webdsl.DBSERVER}"/>
      <token key="DBNAME" value="${webdsl.DBNAME}"/>
      <token key="DBUSER" value="${webdsl.DBUSER}"/>
      <token key="DBPASSWORD" value="${webdsl.DBPASSWORD}"/>
      <token key="INDEXDIR" value="${webdsl.INDEXDIR}"/>
      <token key="SEARCHSTATS" value="${webdsl.SEARCHSTATS}"/>
      <token key="INDEXSHARDING" value="${indexshardingdef}"/>
      <token key="EHCACHETIMEOUT" value="${webdsl.EHCACHETIMEOUT}"/>
      <token key="EHCACHEDISKSTORE" value="${webdsl.EHCACHEDISKSTORE}"/>
    </replacetokens></filterchain>
  </copy>
</then>
</elseif>
<else>
  <echo message="configuring for using Mysql database"/>
  <copy overwrite="true" file="${templatesourcedir}/tpl_hibernate.properties" tofile="${templatesourcedir}/hibernate.properties">
  <filterchain><replacetokens>
    <token key="DBSTORAGEOPTION" value="${webdsl.DBSTORAGEOPTION}"/>
    <token key="DBDRIVERCLASS" value="com.mysql.jdbc.Driver"/>
    <token key="DBJDBCOPTIONS" value=""/>
    <token key="DEBUGHIBERNATE" value="${webdsl.DEBUGHIBERNATE}"/>
    <token key="DBMODE" value="${webdsl.DBMODE}"/>
    <token key="DBSERVER" value="${webdsl.DBSERVER}"/>
    <token key="DBNAME" value="${webdsl.DBNAME}"/>
    <token key="DBUSER" value="${webdsl.DBUSER}"/>
    <token key="DBPASSWORD" value="${webdsl.DBPASSWORD}"/>
    <token key="INDEXDIR" value="${webdsl.INDEXDIR}"/>
    <token key="SEARCHSTATS" value="${webdsl.SEARCHSTATS}"/>
    <token key="INDEXSHARDING" value="${indexshardingdef}"/>
    <token key="EHCACHETIMEOUT" value="${webdsl.EHCACHETIMEOUT}"/>
    <token key="EHCACHEDISKSTORE" value="${webdsl.EHCACHEDISKSTORE}"/>
  </replacetokens></filterchain>
</copy>
</else>
</if>
<!-- copy build.properties itself as well to provide easy configuration of other settings -->
<copy overwrite="true" file="${servletappdir}/build.properties" tofile="${templatesourcedir}/build.properties"/>
</target>

<target name="reindex" depends="compile, webdsl-reindex.reindex" />


</project>