[
   HqlQuery -- _1,
   DslExp   --  H hs=0[ KW["~"] _1 ],

   Module                             -- V[H[KW["module"] _1] _2],
   Module.2:iter-star                 -- _1,
   ModuleDefs                         -- V[H[KW["module"] _1] _2 _3],
   ModuleDefs.2:iter-star             -- _1,
   ModuleDefs.3:iter-star             -- _1,

   Imports                            -- H[KW["imports"] _1],

   Qualified                          -- H hs=0[_1 KW["."] _2],
   ApplicationDefs                    -- V vs=1[H[KW["application"] _1] _2 _3],
   ApplicationDefs.2:iter-star        -- _1,
   ApplicationDefs.3:iter-star        -- _1,
   Application                        -- V vs=1[H[KW["application"] _1] _2],
   Application.2:iter-star            -- _1,
   Section                            -- V is=2 vs=1 [H[KW["section"] _1] _2],
   Section.2:iter-star                -- _1,
   Description                        -- V[V is=2[H[KW["description"] KW["{"]] HV[_1]] KW["}"]],
   Note                               -- V[V is=2[KW["note"] KW["{"] HV[_1]] KW["}"]],
   GlobalsDefinition                  -- KW["globals"] KW["{"] _1 KW["}"],
   Entity                             -- V[V is=2[H[KW["entity"] _1 KW[":"] _2 KW["{"]] _3] KW["}"]],
   Entity.4:iter-star                 -- _1,
   EntityNoSuper                      -- V[V is=2[H[KW["entity"] _1 KW["{"]] _2] KW["}"]],
   EntityNoSuper.3:iter-star          -- _1,
   SessionEntity                      -- V[V is=2[H[KW["session"] _1 KW["{"]] _2] KW["}"]],
   SessionEntity.2:iter-star          -- _1,
   SessionEntity.3:iter-star          -- _1,
   ExtendEntity                       -- V[V is=2[H[KW["extend"] KW["entity"] _1 KW["{"]] _2] KW["}"]],
   ExtendSessionEntity                -- KW["extend"] KW["session"] _1 KW["{"] _2 KW["}"],
   Property                           -- H[_1 _2 _3 KW["("] _4 KW[")"]],
   Property.4:iter-star-sep           -- H hs=0[_1 KW[","]],
   PropertyNoAnno                     -- H[_1 _2 _3],
   DerivedProperty                    -- H[_1 _2 _3 KW["("] _4 KW[")"] KW[":="] _5],
   DerivedProperty.4:iter-star-sep    -- H hs=0[_1 KW[","]],
   DerivedPropertyNoAnno              -- H[_1 _2 _3 KW[":="] _4],
   Enum                               -- V[V is=2[H[ KW["enum"] _1 KW["{"]] _2] KW["}"] ],
   Enum.2:iter-star-sep               -- H hs=0[_1 KW[","]],
   Simple                             -- KW["::"],
   Ref                                -- KW["->"],
   Comp                               -- KW["<>"],
   AnyProp                            -- KW[":"],
   SimpleSort                         -- _1,
   GenericSort                        -- H hs=0[_1 KW["<"] _2 KW[">"]],
   GenericSort.2:iter-sep             -- H hs=0[_1 KW[","]],
   EntitySort                         -- _1,
   SimpleAnno                         -- _1,
   InverseAnno                        -- KW["inverse"] KW["="] _1 KW["."] _2,
   InverseSlaveAnno                   -- KW["inverseSlave"] KW["="] _1 KW["."] _2,
   InverseReferenceOnlyAnno           -- KW["inverse-reference-only"],
   InlineAnno                         -- KW["inline"] KW["("] _1 KW[")"],
   InlineAnno.1:iter-star-sep         -- _1 KW[","],
   SelectAnno                         -- KW["select"] KW["="] _1,
   ParamAnno                          -- _1 KW["("] _2 KW[")"],
   ParamAnno.2:iter-star-sep          -- _1 KW[","],

   Page                               -- KW["page"],
   Email                              -- KW["email"],
   Template                           -- KW["template"],
   Local                              -- KW["local"],
   Feed                               -- KW["feed"],
   Arg                                -- H[ H hs=0[ _1 KW[":"] ] _2],
   Text                               -- H hs=0[KW["\""] _1 KW["\""]],
   IfExp -- H[KW["if"] KW["("] _1 KW[")"] _2 KW["else"] _3],
   IfTempl                            -- V[ V is=2[ H[KW["if"] KW["("] _1 KW[")"] KW["{"] ] _2 ] KW["}"] KW["else"] KW["{"] _3 KW["}"] ],
   IfTempl.2:iter-star                -- _1,
   IfTempl.3:iter-star                -- _1,
   IfNoElseTempl                      -- V[ V is=2[ H[KW["if"] KW["("] _1 KW[")"] KW["{"] ] _2 ] KW["}"]],
   IfNoElseTempl.2:iter-star          -- _1,
   TemplateCallNoArgs                 -- _1,
   True                               -- KW["true"],
   False                              -- KW["false"],
   Null                               -- KW["null"],
   TemplateCallNoBody                 -- H [_1 KW["("] H[_2] KW[")"]],
   TemplateCallNoBody.2:iter-star-sep -- H [_1 KW[","]],
   TemplateCallBody                   -- V[ V is=2[H[_1]  _2]],
   TemplateCallBody.2:iter-star       -- _1,
   TemplateCall                       -- V[ H [ H hs=0[ _1 KW["("] ] H[_2] H hs=0[ KW[")"] KW["["] ] H[_3] KW["]"]] _4],
   TemplateCall.2:iter-star-sep       -- H [_1 KW[","]],
   TemplateCall.3:iter-star-sep       -- H [_1 KW[","]],
   TemplateCall.4:iter-star           -- _1,
   TemplateCallPropsNoArgs.3:iter-star     -- _1,
   TemplateCallPropsNoArgs.2:iter-star-sep -- H hs=0[_1 KW[","]],
   TemplateCallPropsNoArgs                 -- V[V is=2[ H [ _1 KW["["] H[_2] KW["]"]] _3] ],
   TemplateCallProps.2:iter-star-sep       -- H [_1 KW[","]],
   TemplateCallProps                       -- V[ V is=2[ H [ _1 KW["["] H[_2] KW["]"]]]],
   TemplateCallPropsNoBody.3:iter-star-sep -- H [_1 KW[","]],
   TemplateCallPropsNoBody.2:iter-star-sep -- H [_1 KW[","]],
   TemplateCallPropsNoBody                 -- V[ V is=2[ H [ _1 KW["("] H[_2] KW[")"] KW["["] H[_3] KW["]"]]]],
   TemplateCallNoAssigns.3:iter-star       -- _1,
   TemplateCallNoAssigns                   -- V[ V is=2[ H [ _1 KW["("] H[_2] KW[")"] _3]]],
   TemplateCallNoAssigns.2:iter-star-sep   -- H [_1 KW[","]],
   TemplateCallNoArgs                      -- _1,

   Action                                  -- V[ H[KW["action"] _1 _2 KW["("] _3 KW[")"]] _4 ],
   Action.1:iter-star                                     -- _1,
   Action.3:iter-star-sep                  -- H hs=0[_1 KW[","]],
   ActionModifierIgnoreValidation          -- KW["ignore-validation"],
   AjaxAction                              -- H[ _1 _2 KW["<<"] _3 KW[";"]],
   AjaxActionIdParam                       -- H[ _1 _2 KW["<<"] _3 KW[";"]],
   AjaxActionNoParam                       -- H[ _1 _2 KW["<<"] KW[";"]],
   AjaxActionNoTarget                      -- H[ _1 KW["<<"] _2 KW[";"]],
   InlineTemplateCall                      -- H[ KW["template"] KW ["{"] _1 KW["}"]],
   InlineTemplateCall.1:iter-star-sep -- H hs=0[_1 KW[","]],
   InlineTemplateCall.1:iter-star     -- _1,
   InitAction                         -- V[ H[KW["init"]] _1],
   Function                           -- V[ H[ KW["function"] H hs=0[ _1 KW["("] ] _2 H hs=0[ KW[")"] KW[":"] ] _3] _4 ],
   Function.3:iter-star-sep           -- H hs=0[_1 KW[","]],
   StaticEntityFunction               -- V[ H[KW["static"] KW["function"] _1 KW["("] _2 KW[")"] _3] _4 ],
   ReturnType                         -- KW[":"] _1,
   CachedFunction                     -- KW["cached"] _1,
   CachedGlobalFunction               -- KW["cached"] _1,
   ExtendFunction                     -- KW["extend"] _1,
   Block                              -- V[H[KW["{"] _1 KW["}"]]],
   Block.1:iter-star                  -- V [_1],
   Assign                             -- H hs=0[H[_1] KW[";"]],
   Stat                               -- H hs=0[H[_1] KW[";"]],
   Return                             -- H[KW["return"] H hs=0[H[_1] KW[";"]]],
   ReturnEmpty                        -- H[KW["return"] KW[";"]],
   Cancel                             -- H[KW["cancel"] H hs=0[H[_1] KW[";"]]],
   GoTo                               -- H[KW["goto"] H hs=0[H[_1] KW[";"]]],
   Schedule                           -- KW["schedule"] _1 KW["for"] _2 KW[";"],
   ScheduleNoFor                      -- KW["schedule"] _1 KW[";"],
   VarDeclInit                        -- H[KW["var"] _1 KW[":"] _2 KW[":="] _3 KW[";"]],
   VarDeclInitInferred                -- H[KW["var"] _1 KW[":="]_2 KW[";"]],
   VarDecl                            -- H[KW["var"] _1 KW[":"] _2 KW[";"]],
   TemplateVarDeclInit                -- H[KW["var"] _1 KW[":"] _2 KW[":="] _3],
   TemplateVarDeclInitInferred        -- H[KW["var"] _1 KW[":="] _2],
   TemplateVarDecl                    -- H[KW["var"] _1 KW[":"] _2],
   If                                 -- V[H[KW["if"] KW["("] _1 KW[")"]] _2 KW["else"] _3],
   IfNoElse                           -- H[KW["if"] KW["("] _1 KW[")"]] _2,
   IfWithElseIf                       -- V[H[KW["if"] KW["("] _1 KW[")"]] _2 _3 KW["else"] _4],
   ElseIf                             -- V[H[KW["else if"] KW["("] _1 KW[")"]] _2],

   CaseStmt                           -- V is=2[ H[KW["case"] KW["("] _1 KW[")"] KW["{"]] _2 KW["}"]],
   CaseStmt.1:iter-star-sep           -- H [_1 KW[","]],
   CaseStmtAlt                        -- V [ H[_1] _2],
   CaseStmtAlt.1:iter-star-sep        -- H [_1 KW[","]],
   CaseStmtDefault                    -- V [ H[KW["default"]] _1],

   TypeCaseStmt                       -- V is=2[ H[KW["typecase"] KW["("] _1 KW["as"] _2 KW[")"] KW["{"]] _3 KW["}"]],
   TypeCaseStmtAlt                    -- V [ H[_1] _2],
   TypeCaseStmtDefault                -- V [ H[KW["default"]] _1],

   Filter                             -- KW["where"] _1 KW["order"] KW["by"] _2 _3,
   FilterNoOrderByNoLimit             -- KW["where"] _1,
   FilterNoWhereNoLimit               -- KW["order"] KW["by"] _1,
   FilterNoWhereNoOrderBy             -- _1,
   FilterNoWhere                      -- KW["order"] KW["by"] _1 _2,
   FilterNoLimit                      -- KW["where"] _1 KW["order"] KW["by"] _2,
   FilterNoOrderBy                    -- KW["where"] _1 _2,

   OrderNonSpecific                   -- _1,
   OrderAscending                     -- _1 KW["asc"],
   OrderDescending                    -- _1 KW["desc"],
   Limit                              -- KW["limit"] _1 KW["offset"] _2,


   Rules                              -- V  [H  [KW["rules"]] _1],
   Rules.1:iter-star                  -- _1,
   Equation                           -- H[_1 KW["="] _2],
   Int                                -- _1,
   Long                               -- _1,
   Float                              -- _1,
   String                             -- H hs=0[KW["\""] _1 KW["\""]],
   Var                                -- _1,
   RequestVar                         -- _1,
   ExternalScopeVar                   -- KW["externalscope"] KW["."] _1,
   FieldAccess                        -- H hs=0[_1 KW["."] _2],
   ObjectCreation                     -- H hs=0[_1 KW["{"] V[_2] KW["}"]],
   ObjectCreation.2:iter-star         -- _1,
   Assignment                         -- H[_1 KW[":="] _2],
   PropertyAssignment                 -- H[ H hs=0[ _1 KW["="] ] _2],
   PropertyValue                      -- _1,
   PropertyValueList                  -- H[KW["["] _1 KW["]"]],
   PropertyValueList.1:iter-star      -- _1,
   PropertyValueList.1:iter-star-sep  --    H hs=0[_1 KW[","]],
   ObjectPropertyAssignment           -- H [_1 KW[":="] _2],
   MapCreation                        -- V  [V vs=2 [KW["["] _1] KW["]"]],
   MapCreation.1:iter-star            -- _1,
   Mapping                            -- _1 KW["->"] _2,
   ListCreation                       -- H hs=0[KW["["] H[_1] KW["]"]],
   ListCreation.1:iter-star-sep       -- H hs=0[_1 KW[","]],
   SetCreation                        -- H hs=0[KW["{"] H[_1] KW["}"]],
   SetCreation.1:iter-star-sep        -- H hs=0[_1 KW[","]],
   TypedListCreation                  -- H hs=0[KW["List"] KW["<"] H[_1] KW[">"] KW["("] _2 KW[")"]],
   TypedListCreation.2:iter-star-sep  -- H hs=0[_1 KW[","]],
   TypedSetCreation                   -- H hs=0[KW["Set"] KW["<"] H[_1] KW[">"] KW["("] _2 KW[")"]],
   TypedSetCreation.2:iter-star-sep   -- H hs=0[_1 KW[","]],
   ThisCall                           -- H hs=0[_1 KW["("] H[_2] KW[")"]],
   ThisCall.2:iter-star-sep           -- H hs=0[_1 KW[","]],
   Call                               -- H hs=0[_1 KW["."] _2 KW["("] H[_3] KW[")"]],
   Call.3:iter-star-sep               -- H hs=0[_1 KW[","]],
   InColl                             -- H hs=1[_1 KW["in"] _2],
   Eq                                 -- _1 KW["=="] _2,
   NotEq                              -- _1 KW["!="] _2,
   LargerThan                         -- _1 KW[">"] _2,
   LargerThanOrEqual                  -- _1 KW[">="] _2,
   SmallerThan                        -- _1 KW["<"] _2,
   SmallerThanOrEqual                 -- _1 KW["<="] _2,
   Add                                -- _1 KW["+"] _2,
   Sub                                -- _1 KW["-"] _2,
   Mul                                -- _1 KW["*"] _2,
   Mod                                -- _1 KW["%"] _2,
   Div                                -- _1 KW["/"] _2,
   And                                -- _1 KW["&&"] _2,
   Or                                 -- _1 KW["||"] _2,
   Not                                -- KW["!"] _1,
   IsA                                -- H hs=1[_1 KW["is"] KW["a"] _2],
   Cast                               -- H[ KW["("] _1 KW["as"] _2 KW[")"] ],
   Parenthetical                      -- H hs=0 ["(" _1 ")"],

    %%access control syntax
   ValidationAnnoLength                         -- KW["length"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoMinLength                      -- KW["minlength"] KW["("] _1 KW[")"],
   ValidationAnnoMaxLength                      -- KW["maxlength"] KW["("] _1 KW[")"],
   ValidationAnnoNotEmpty                       -- KW["notempty"],
   ValidationAnnoEmail                          -- KW["email"],
   ValidationAnnoCreditCardNumber               -- KW["creditcardnumber"],
   ValidationAnnoEAN                            -- KW["EAN"],
   ValidationAnnoPattern                        -- KW["pattern"] KW["("] _1 KW[")"],
   ValidationAnnoPatternWithFlags               -- KW["pattern"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoPatternWithFlags.2:iter-star   -- _1,
   FlagCanonEq                                  -- KW["canonicalequivalence"],
   FlagCaseInsensitive                          -- KW["caseinsensitive"],
   FlagComments                                 -- KW["comments"],
   FlagDotAll                                   -- KW["dotall"],
   FlagLiteral                                  -- KW["literal"],
   FlagMultiline                                -- KW["multiline"],
   FlagUnicodeCase                              -- KW["unicodecase"],
   FlagUnixLines                                -- KW["unixlines"],
   ValidationAnnoMax                            -- KW["max"] KW["("] _1 KW[")"],
   ValidationAnnoMin                            -- KW["min"] KW["("] _1 KW[")"],
   ValidationAnnoRange                          -- KW["range"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoMinRange                       -- KW["minrange"] KW["("] _1 KW[")"],
   ValidationAnnoMaxRange                       -- KW["maxrange"] KW["("] _1 KW[")"],
   ValidationAnnoDigits                         -- KW["digits"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoPast                           -- KW["past"],
   ValidationAnnoFuture                         -- KW["future"],
   ValidationAnnoSize                           -- KW["size"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoMinSize                        -- KW["minsize"] KW["("] _1 KW[")"],
   ValidationAnnoMaxSize                        -- KW["maxsize"] KW["("] _1 KW[")"],
   ValidationAnnoNotNull                        -- KW["notnull"],
   ValidationAnnoAssertTrue                     -- KW["asserttrue"],
   ValidationAnnoAssertFalse                    -- KW["assertfalse"],
   ValidationAnnoValid                          -- KW["valid"],
   AccessControlDefinition                      -- V is=2[ H[KW["access"] KW["control"] KW["rules"]] _1 _2],
   AccessControlDefinition.1:opt                -- _1,
   AccessControlDefinition.2:iter-star          -- _1,
   AccessControlDefinition                      -- V [ V is=2[H[KW["access"] KW["control"] KW["rules"] KW["{"]] _1 _2] KW["}"] ],
   AccessControlDefinition.1:opt                -- _1,
   AccessControlDefinition.2:iter-star          -- _1,
   AccessControlPrincipal                       -- KW["principal"] KW["is"] _1 KW["with"] KW["credentials"] _2,
   AccessControlPrincipal.2:iter-sep            -- _1 KW[","],
   AccessControlPrincipal                       -- KW["principal"] KW["is"] _1 KW["with"] KW["credentials"] _2,
   AccessControlPrincipal.2:iter-sep            -- _1 KW[","],
   AccessControlRule                            -- V[ V is=2[H[KW["rule"] _1 _2 KW["("] _3 KW[")"] KW["{"]] H[_4] H[_5]] KW["}"]],
   AccessControlRule.5:iter-star                -- _1,
   AccessControlRule                            -- V[ V is=2[H[KW["rules"] _1 _2 KW["("] _3 KW[")"] KW["{"]] H[_4] H[_5]] KW["}"]],
   AccessControlRule.5:iter-star                -- _1,
   SpecialAccessControlRule                     -- V[ V is=2[H[KW["rule"] _1 KW["{"]] H[_2]] KW["}"]],
   MatchArgs                                    -- H[_1 _2],
   MatchArgs.1:iter-star-sep                    -- _1 KW[","],
   MatchArgs.2:opt                              -- _1,
   MatchArgs                                    -- H[_1 _2],
   MatchArgs.1:iter-star-sep                    -- _1 KW[","],
   MatchArgs.2:opt                              -- _1,
   Predicate                                    -- H[ KW["predicate"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"] ],
   Predicate.2:iter-star-sep                    -- _1 KW[","],
   AccessControlPointcutElement                 -- _1 _2 KW["("] _3 _4 KW[")"],
   AccessControlPointcutElement.3:iter-star-sep -- _1 KW[","],
   AccessControlPointcutElement.4:opt           -- _1,
   AccessControlPointcut                        -- KW["pointcut"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   AccessControlPointcut.2:iter-star-sep        -- _1 KW[","],
   AccessControlPointcut.3:iter-star-sep        -- _1 KW[","],
   ACPolicy                                     -- KW["access"] KW["control"] KW["policy"] _1,
   PolicyAnd                                    -- _1 KW["AND"] _2,
   PolicyOr                                     -- _1 KW["OR"] _2,
   Name                                         -- _1,

   %%input validation
   Validator                                    -- KW["validator"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"] KW[":"] _4,
   Validator.2:iter-star-sep                    -- _1 KW[","],
   Validator.3:iter-star                        -- _1,
   ValidateCall                                 -- KW["validate"] _1 KW["("] _2 KW[")"],

   %%styling
   ThemeDefinition                              -- KW["theme"] _1 _2 KW["("] KW[")"] KW["{"] _3 KW["}"],
   ThemeDefinition.3:iter-star                  -- _1,
   StyleSection                                 -- KW["style"] _1 _2,
   StyleSection.2:iter-star                     -- _1,
   StyleDefinition                              -- V[ V is=2[ H[ _1 KW["{"] ] _2 ] KW["}" ] ],
   StyleDefinition.2:iter-star                  -- _1,
   Selector                                     -- H hs=1[ _1 _2 ],
   Selector.2:iter-star                         -- _1,
   Selector.2:iter-star.1:seq                   -- H hs=1[ _1 _2 _3 ],
   Selector.2:iter-star.1:seq.3:opt             -- _1,
   SimpleSelector                               -- H hs=1[ _1 _2 ],
   IdSimpleSelector                             -- H hs=0[ KW["#"] _1 ],
   ElemSimpleSelector                           -- _1,
   ElemSimpleAttrSelector                       -- _1 _2,
   ElemSimpleAttrSelector.2:iter-star           -- _1,
   ElemClassAttrSelector                        -- _1 _2 _3,
   ElemClassAttrSelector.3:iter-star            -- _1,
   ClassSimpleSelector                          -- H hs=0[ KW["."] _1 ],
   UniversalSimpleSelector                      -- KW["*"],
   SimpleSelector                               -- _1,
   SelectorAttribute                            -- H hs=0[ KW[":"] _1 ],
   ChildCombinator                              -- KW[">"],
   DescendantCombinator                         -- KW[">>"],
   MatchDefinition                              -- H hs=0[ _1 KW["("] _2 KW[")"] ],
   StyleVarDecl                                 -- H hs=1[ KW["const"] _1 KW[":"] _2 KW[";"] ],
   StyleVarDeclInit                             -- H hs=1[ KW["const"] _1 KW[":"] _2 KW[":="] _3 KW[";"] ],
   StyleDeclaration                             -- H[ H hs=0[ _1 ] KW[":="] H hs=0[ _2 KW[";"] ] ],
   StyleProperty                                -- _1,
   StylePropertyValue                           -- H hs=0[ _1 KW["."] _2 ],
   StyleVar                                     -- _1,
   StyleValueExpression                         -- H hs=0[ H hs=0[ KW["("] _1 KW[")"] ] KW["."] _2 ],
   StyleAdd                                     -- H hs=1[ _1 KW["+"] _2],
   StyleSub                                     -- H hs=1[ _1 KW["-"] _2],
   StyleMul                                     -- H hs=1[ _1 KW["*"] _2],
   StyleDiv                                     -- H hs=1[ _1 KW["/"] _2],
   StyleValue                                   -- H hs=0[ _1 _2 ],
   StyleValue                                   -- _1,
   StyleValue                                   -- H hs=0[ _1 _2 ],
   StyleValue.2:iter                            -- _1,
   StyleValue                                   -- _1,
   StyleValue                                   -- _1,
   StyleValue                                   -- _1,
   StyleValueExtension                          -- H hs=0[ KW["."] _1 ],
   StyleSort                                    -- H hs=0[ _1 _2],
   StyleSort                                    -- _1,
   Uri                                          -- KW["url"] KW["("] _1 KW[")"],
   Hash                                         -- KW["#"] _1,
   LayoutSection                                -- V  [H  [KW["layout"]] _1],
   LayoutSection.1:iter-star                    -- _1,
   LayoutDefinition                             -- _1 _2 KW["{"] _3 KW["}"],
   LayoutDefinition.3:iter-star                 -- _1,
   LayoutDefinition                              -- V[ V is=2[ H[ _1 KW["{"] ] _2 ] KW["}" ] ],
   LayoutDefinition.2:iter-star                 -- _1,
   FloatStatement                               -- H hs=1[ KW["float"] KW["{"] _1 KW["}"] ],
   FloatStatement.1:iter-star                   -- _1,
   LayoutStatement                              -- _1 KW[";"],
   NamedLayoutExpression                        -- H hs=1[ H hs=0[ _1 KW[":"] ] KW["["] _2 KW["]"] ],
   LayoutExpression                             -- _1,
   LayoutExpression                             -- _1,

   %% Procedures
   Procedures                                   -- V is=2 vs=1 [H[KW["procedures"] _1] _2],
   Procedure                                    -- V[V is=2[H[KW["procedure"] _1 KW["("] _2 KW[")"] KW["{"]] _3 ] KW["}"]],
   AutoProcedure                                -- V[V is=2[H[KW["auto"] KW["procedure"] _1 KW["("] _2 KW[")"] KW["{"]] _3 ] KW["}"]],
   Procedure.2:iter-star-sep                    -- _1 KW[","],
   Procedure.3:iter-star                        -- _1,
   ProcedureWho                                 -- V[V is=2[H[KW["who"] KW["{"]] _1] KW["}"]],
   ProcedureWhen                                -- V[V is=2[H[KW["when"] KW["{"]] _1] KW["}"]],
   ProcedureDo                                  -- V[V is=2[H[KW["do"] KW["{"]] _1] KW["}"]],
   ProcedureDone                                -- V[V is=2[H[KW["done"] KW["{"]] _1] KW["}"]],
   ProcedureProcessed                           -- V[KW["processed"] _1],
   ProcedureEnabled                             -- V[V is=2[H[KW["enabled"] KW["{"]] _1] KW["}"]],
   ProcedureDisabled                            -- V[V is=2[H[KW["disabled"] KW["{"]] _1] KW["}"]],
   ProcedureView                                -- V[V is=2[H[KW["view"] KW["{"]] _1] KW["}"]],

   %% Procedure Process
   ProcedureProcess                             -- V[ V is=2[ H[KW["process"] KW["{"] _1] ] KW["}"] ],
   ProcCall                                     -- _1 KW["("] _2 KW[")"],
   ProcSeq                                      -- _1 KW[";"] _2,
   ProcWhile                                    -- KW["while"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],
   ProcIfNoElse                                 -- KW["if"] KW["("] _1 KW[")"] _2,
   ProcIf                                       -- KW["if"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"] KW["else"] KW["{"] _3 KW["}"],
   ProcXor                                      -- _1 KW["xor"] _2,
   ProcAnd                                      -- _1 KW["and"] _2,
   ProcPlus                                     -- _1 KW["+"] _2,
   ProcRepeatUntil                              -- KW["repeat"] KW["{"] _1 KW["}"] KW["until"] _2,
   RemoveMe                                     -- KW["RemoveMe"],
   ExtendProcedure                              -- V[V is=2[H[KW["extend"] KW["procedure"] _1 KW["("] _2 KW[")"] KW["{"]] _3 ] KW["}"]],

   %% Derive
   Derive                                       -- H[KW["derive"] _1 KW["from"] _2 KW["for"] KW["("] _3 KW[")"]],
   Derive.3:iter-star-sep                       -- H[_1 KW[","]],
   Derive                                       -- H[KW["derive"] _1 KW["from"] _2],
   DeriveDefault                                -- _1,
   DeriveMode                                   -- H[_1 KW["("] _2 KW[")"]],
   EditPage                                     -- KW["editPage"],
   EditRows                                     -- KW["editRows"],
   ViewPage                                     -- KW["viewPage"],
   ViewRows                                     -- KW["viewRows"],

   ExpandTemplateCall                           -- KW["expand"] _1 KW["to"] _2,
   ExpandTemplateDefinition                     -- KW["expandtemplate"] _1 KW["to"] _2 KW["{"] _3 KW["}"],
   ExpandLocal                                  -- KW["expand"] _1 KW["to"] _2 KW["{"] _3 KW["}"],

   ExpEntityDerive                              -- _1 KW["with"] _2 ,
   ExpEntityDeriveProp                          -- _1 KW["("] _2 KW[")"],
   ExpEntityDeriveProp.2:iter-star-sep          -- H[_1 KW[","]],

   ArgEntityDerive                              -- _1 KW["with"] _2,
   ArgEntityDeriveProp                          -- _1 KW["("] _2 KW[")"],
   ArgEntityDeriveProp.2:iter-star-sep          -- H[_1 KW[","]],
   ArgEntityDerivePropArg                       -- _1 KW[":"] _2,

   ForeachElementEntityDerive                   -- KW["foreach"] _1 KW["{"] _2 KW["}"],
   ForeachStatementEntityDerive                 -- KW["foreach"] _1 KW["{"] _2 KW["}"],

   None                                         -- ,
   Some                                         -- _1,

   %% needs sorting, generated by update-pp.sh

   Note.1:iter-star                             -- _1,
   Description.1:iter-star                      -- _1,
   SelectFrom                                   -- _1 _2,
   SelectFrom.1:opt                             -- _1,
   SelectObject                                 -- KW["object"] KW["("] _1 KW[")"],
   Selector                                     -- _1 _2,
   Selector.2:iter-star                         -- _1,
   Selector.2:iter-star.1:seq                   -- _1 _2 _3,
   Selector.2:iter-star.1:seq.3:opt             -- _1,
   SimpleSelector                               -- _1 _2,
   IdSimpleSelector                             -- KW["#"] _1,
   ElemSimpleSelector                           -- _1,
   ElemSimpleAttrSelector                       -- _1 _2,
   ElemSimpleAttrSelector.2:iter                -- _1,
   ElemClassAttrSelector                        -- _1 KW["."] _2 _3,
   ElemClassAttrSelector.3:iter                 -- _1,
   ClassSimpleSelector                          -- KW["."] _1,
   SimpleSelector                               -- _1,
   UniversalSimpleSelector                      -- KW["*"],
   SelectorAttribute                            -- KW[":"] _1,
   SelectAnno                                   -- KW["select"] KW["="] _1,
   LimitNoLimit                                 -- KW["offset"] _1,
   LimitNoOffset                                -- KW["limit"] _1,

   HqlQuery.1:parameterized-sort                -- _1 _2,
   HqlQueryLimit                                -- _1 KW["limit"] _2,
   HqlQueryLimitOffset                          -- _1 KW["limit"] _2 KW[","] _3,
   Function.2:iter-star-sep                     -- _1 KW[","],
   ExtendSessionEntity.3:iter-star              -- _1,
   ExtendSessionEntity.2:iter-star              -- _1,
   ExtendEntity.3:iter-star                     -- _1,
   ExtendEntity.2:iter-star                     -- _1,
   EntityNoSuper.2:iter-star                    -- _1,
   Entity.3:iter-star                           -- _1,
   SessionEntity.3:iter-star                    -- _1,
   ExtendEntity.3:iter-star                     -- _1,
   ExtendSessionEntity.3:iter-star              -- _1,
   GlobalsDefinition.1:iter-star                -- _1,
   ValidationErrors                             -- KW["validationErrors"] KW["("] _1 KW[")"],
   ValidationErrors                             -- KW["validationErrors"] KW["("] KW[")"],
   ValidationErrors                             -- KW["validationErrors"] KW["("] _1 KW[")"],
   ValidationErrors                             -- KW["validationErrors"] KW["("] KW[")"],
   NamedValidateStatement                       -- _1 KW[":"] KW["validate"] KW["("] _2 KW[","] _3 KW[")"] KW[";"],
   ValidateStatement                            -- H[ KW["validate"] KW["("] _1 KW[","] _2 KW[")"] KW[";"] ],
   NamedValidateStatement                       -- _1 KW[":"] KW["validate"] KW["("] _2 KW[","] _3 KW[")"] KW[";"],
   NamedValidateAnno                            -- _1 KW[":"] KW["validate"] KW["("] _2 KW[","] _3 KW[")"],
   ValidateAnno                                 -- KW["validate"] KW["("] _1 KW[","] _2 KW[")"],
   NamedValidateAnno                            -- _1 KW[":"] KW["validate"] KW["("] _2 KW[","] _3 KW[")"],
   ValidateDeleteAnno                           -- KW["validatedelete"] KW["("] _1 KW[","] _2 KW[")"],
   ValidateUpdateAnno                           -- KW["validateupdate"] KW["("] _1 KW[","] _2 KW[")"],
   ValidateCreateAnno                           -- KW["validatecreate"] KW["("] _1 KW[","] _2 KW[")"],
   IgnoreAccessControl                          -- KW["ignore-access-control"],
   EnumValue                                    -- H[_1 KW["("] _2 KW[")"]],

   DeriveBodyElement.2:iter-star                -- _1,
   DeriveBodyElement                            -- _1 KW["{"] _2 KW["}"],
   DeriveBodyElement.2:iter-star                -- _1,
   DeriveBody.1:iter-star                       -- _1,
   DeriveBody                                   -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   DeriveBody.1:iter-star                       -- _1,
   DeriveBodyElement                            -- _1 KW["{"] _2 KW["}"],
   DeriveBodyElement.2:iter-star                -- _1,
   Derive                                       -- KW["derive"] _1 KW["from"] _2 KW["for"] KW["("] _3 KW[")"],
   Derive.3:iter-star-sep                       -- _1 KW[","],
   Derive                                       -- KW["derive"] _1 KW["from"] _2,
   Derive                                       -- KW["derive"] _1 KW["from"] _2 KW["for"] KW["("] _3 KW[")"] _4,
   Derive.3:iter-star-sep                       -- _1 KW[","],
   Derive                                       -- KW["derive"] _1 KW["from"] _2 _3,
   Derive                                       -- KW["derive"] _1 _2,
   DeriveDefault                                -- _1,
   DeriveMode                                   -- _1 KW["("] _2 KW[")"],
   DeriveBody                                   -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   DeriveBody.1:iter-star                       -- _1,
   DeriveBodyElement                            -- _1 KW["{"] _2 KW["}"],
   DeriveBodyElement.2:iter-star                -- _1,
   DerivedProperty                              -- _1 _2 _3 KW["("] _4 KW[")"] KW[":="] _5,
   DerivedProperty.4:iter-star-sep              -- _1 KW[","],
   DerivedPropertyNoAnno                        -- _1 _2 _3 KW[":="] _4,
   ProcedureView.1:iter-star                    -- _1,
   ExtendProcedure.3:iter-star                  -- _1,
   AutoProcedure.3:iter-star                    -- _1,
   MDNavigate.1:opt                             -- _1,
   MDCol.1:opt                                  -- _1,
   MDRowNoCols.1:opt                            -- _1,
   MDRow.1:opt                                  -- _1,
   MDBlock.1:opt                                -- _1,
   MDHeader.1:opt                               -- _1,
   MDSpacer.1:opt                               -- _1,
   MDListItemMulti.1:opt                        -- _1,
   MDListItem.1:opt                             -- _1,
   Path.1:iter-sep                              -- _1 KW["."],
   Path                                         -- _1,
   Path.1:iter-sep                              -- _1 KW["."],
   Empty                                        -- KW["empty"],
   ValidationAnnoNotEmpty                       -- KW["notempty"],
   ReturnEmpty                                  -- KW["return"] KW[";"],
   Paren.1:iter-sep                             -- _1 KW[","],
   Paren                                        -- KW["("] _1 KW[")"],
   Paren.1:iter-sep                             -- _1 KW[","],
   Indices                                      -- KW["indices"] KW["("] _1 KW[")"],
   InCollectionElements                         -- _1 KW["in"] KW["elements"] KW["("] _2 KW[")"],
   Elements                                     -- KW["elements"] KW["("] _1 KW[")"],
   Sum                                          -- KW["sum"] KW["("] _1 KW[")"],
   NumParam                                     -- _1,
   IdParam                                      -- _1,
   AjaxActionIdParam                            -- _1 _2 KW["<<"] _3 KW[";"],
   UMinus                                       -- KW["-"] _1,
   Divide                                       -- _1 KW["/"] _2,
   Multiply                                     -- _1 KW["*"] _2,
   Minus                                        -- _1 KW["-"] _2,
   UMinus                                       -- KW["-"] _1,
   Plus                                         -- _1 KW["+"] _2,
   ProcPlus                                     -- _1 KW["+"] _2,
   Concat                                       -- _1 KW["||"] _2,
   NotMemberOf                                  -- _1 KW["not"] KW["member"] KW["of"] _2,
   MemberOf                                     -- _1 KW["member"] KW["of"] _2,
   NotMemberOf                                  -- _1 KW["not"] KW["member"] KW["of"] _2,
   NotIn                                        -- _1 KW["not"] KW["in"] _2,
   InnerJoin                                    -- KW["inner"],
   InClassDeclaration                           -- _1 KW["in"] KW["class"] _2,
   InCollection                                 -- KW["in"] KW["("] _1 KW[")"] _2,
   InCollectionElements                         -- _1 KW["in"] KW["elements"] KW["("] _2 KW[")"],
   In                                           -- _1 KW["in"] _2,
   NotIn                                        -- _1 KW["not"] KW["in"] _2,
   Indices                                      -- KW["indices"] KW["("] _1 KW[")"],
   FlagCaseInsensitive                          -- KW["caseinsensitive"],
   StyleVarDeclInit                             -- KW["const"] _1 KW[":"] _2 KW[":="] _3 KW[";"],
   InverseAnno                                  -- KW["inverse"] KW["="] _1 KW["."] _2,
   InverseSlaveAnno                             -- KW["inverseSlave"] KW["="] _1 KW["."] _2,
   InlineAnno                                   -- KW["inline"] KW["("] _1 KW[")"],
   InlineAnno.1:iter-star-sep                   -- _1 KW[","],

   Int                                          -- _1,
   InColl                                       -- _1 KW["in"] _2,
   InlineAction                                 -- KW["action"] _1,
   InlineTemplateCall                           -- KW["template"] KW["{"] _1 KW["}"],
   InlineTemplateCall.1:iter-star               -- _1,
   InitAction                                   -- KW["init"] _1,
   LT                                           -- _1 KW["<"] _2,
   GT                                           -- _1 KW[">"] _2,
   NOTLIKE                                      -- _1 KW["not"] KW["like"] _2,
   LIKE                                         -- _1 KW["like"] _2,
   NOTLIKE                                      -- _1 KW["not"] KW["like"] _2,
   SQLNE                                        -- _1 KW["<>"] _2,
   NE                                           -- _1 KW["!="] _2,
   SQLNE                                        -- _1 KW["<>"] _2,
   IS                                           -- _1 KW["is"] _2,
   EQ                                           -- _1 KW["="] _2,
   QueryNot                                     -- KW["not"] _1,
   QueryAnd                                     -- _1 KW["and"] _2,
   QueryOr                                      -- _1 KW["or"] _2,
   AliasedExpression.2:opt                      -- _1,
   AliasedExpression                            -- _1 _2,
   AliasedExpression.2:opt                      -- _1,
   WhereClause                                  -- KW["where"] _1,
   HavingClause                                 -- KW["having"] _1,
   Descending                                   -- KW["desc"],
   Descending                                   -- KW["descending"],
   OrderDescending                              -- _1 KW["desc"],
   Ascending                                    -- KW["asc"],
   Ascending                                    -- KW["ascending"],
   OrderAscending                               -- _1 KW["asc"],
   OrderElement.2:opt                           -- _1,
   OrderElement                                 -- _1 _2,
   OrderElement.2:opt                           -- _1,
   OrderByClause.1:iter-sep                     -- _1 KW[","],
   OrderByClause                                -- V  [H  [KW["order"] KW["by"]] _1],
   OrderByClause.1:iter-sep                     -- _1 KW[","],
   GroupBy.2:opt                                -- _1,
   GroupBy.1:iter-sep                           -- _1 KW[","],
   GroupBy                                      -- KW["group"] KW["by"] _1 _2,
   GroupBy.1:iter-sep                           -- _1 KW[","],
   GroupBy.2:opt                                -- _1,
   PropertyFetch                                -- KW["fetch"] KW["all"] KW["properties"],
   AsAlias                                      -- KW["as"] _1,
   Alias                                        -- _1,
   AliasedExpression                            -- _1 _2,
   AliasedExpression.2:opt                      -- _1,
   AsAlias                                      -- KW["as"] _1,
   InCollectionElements                         -- _1 KW["in"] KW["elements"] KW["("] _2 KW[")"],
   InCollection                                 -- KW["in"] KW["("] _1 KW[")"] _2,
   InCollectionElements                         -- _1 KW["in"] KW["elements"] KW["("] _2 KW[")"],
   InClassDeclaration                           -- _1 KW["in"] KW["class"] _2,
   FromClass.3:opt                              -- _1,
   FromClass.2:opt                              -- _1,
   FromClass                                    -- _1 _2 _3,
   FromClass.2:opt                              -- _1,
   FromClass.3:opt                              -- _1,
   WithClause                                   -- KW["with"] _1,
   Fetch                                        -- KW["fetch"],
   PropertyFetch                                -- KW["fetch"] KW["all"] KW["properties"],
   FromJoin.6:opt                               -- _1,
   FromJoin.5:opt                               -- _1,
   FromJoin.4:opt                               -- _1,
   FromJoin.2:opt                               -- _1,
   FromJoin.1:opt                               -- _1,
   FromJoin                                     -- _1 KW["join"] _2 _3 _4 _5 _6,
   FromJoin.1:opt                               -- _1,
   FromJoin.2:opt                               -- _1,
   FromJoin.4:opt                               -- _1,
   FromJoin.5:opt                               -- _1,
   FromJoin.6:opt                               -- _1,
   InnerJoin                                    -- KW["inner"],
   FullJoin                                     -- KW["full"],
   RightOuterJoin                               -- KW["right"] KW["outer"],
   LeftOuterJoin                                -- KW["left"] KW["outer"],
   RightJoin                                    -- KW["right"],
   LeftJoin                                     -- KW["left"],
   FromRangeJoin.2:opt                          -- _1,
   FromRangeJoin                                -- _1 _2,
   FromRangeJoin.2:opt                          -- _1,
   FromClause.1:iter-sep                        -- _1 KW[","],
   FromClause                                   -- V  [H  [KW["from"]] _1],
   FromClause.1:iter-sep                        -- _1 KW[","],
   SelectObject                                 -- KW["object"] KW["("] _1 KW[")"],
   NewExpression                                -- KW["new"] _1 KW["("] _2 KW[")"],
   Distinct                                     -- KW["distinct"],
   SelectFrom                                   -- _1 _2,
   SelectFrom.1:opt                             -- _1,
   SelectObject                                 -- KW["object"] KW["("] _1 KW[")"],
   Selector                                     -- _1 _2,
   Selector.2:iter-star                         -- _1,
   Selector.2:iter-star.1:seq                   -- _1 _2 _3,
   Selector.2:iter-star.1:seq.3:opt             -- _1,
   SimpleSelector                               -- _1 _2,
   IdSimpleSelector                             -- KW["#"] _1,
   ElemSimpleSelector                           -- _1,
   ElemSimpleAttrSelector                       -- _1 _2,
   ElemSimpleAttrSelector.2:iter                -- _1,
   ElemClassAttrSelector                        -- _1 KW["."] _2 _3,
   ElemClassAttrSelector.3:iter                 -- _1,
   ClassSimpleSelector                          -- KW["."] _1,
   SimpleSelector                               -- _1,
   UniversalSimpleSelector                      -- KW["*"],
   SelectorAttribute                            -- KW[":"] _1,
   SelectAnno                                   -- KW["select"] KW["="] _1,
   SelectFrom.1:opt                             -- _1,
   SelectFrom                                   -- _1 _2,
   SelectFrom.1:opt                             -- _1,
   QueryRule.4:opt                              -- _1,
   QueryRule.3:opt                              -- _1,
   QueryRule.2:opt                              -- _1,
   QueryRule                                    -- _1 _2 _3 _4,
   QueryRule.2:opt                              -- _1,
   QueryRule.3:opt                              -- _1,
   QueryRule.4:opt                              -- _1,
   QueryUnion                                   -- _1 KW["union"] _2,

   Attribute                                    -- H hs=0[ _1 KW["="] ] _2,
   XMLElement                                   -- V[ V is=2[ H[ H hs=0[ KW["<"] _1 ] _2 KW[">"] ] _3 ] H hs=0[ KW["</"] _4 KW[">"] ] ],
   XMLElement.2:iter-star                       -- _1,
   XMLElement.3:iter-star                       -- _1,
   XMLEmptyElement                              -- H[ H hs=0[ KW["<"] _1 ] _2 KW["/>"] ],
   XMLEmptyElement.2:iter-star                  -- _1,
   XMLEmptyElementUnclosed                      -- H[ H hs=0[ KW["<"] _1 ] _2 KW[">"] ],
   XMLEmptyElementUnclosed.2:iter-star          -- _1,
   XMLComment                                   -- _1,

%% Search
   SearchableAnno                               -- _1 KW["*"] _2,
   SearchableAnno                               -- KW["searchable"],
   SearchableAnno                               -- KW["searchable"] KW["("] _1 KW[")"],
   SearchNamespaceAnno                          -- KW["search namespace"],
   SearchableAnno.1:iter-star-sep               -- H hs=0[_1 KW[","]],
   SearchableAnnoBoost                          -- _1 KW["^"] _2,
   SA-Argument                                  -- H hs=0[_1 KW["="] _2],
   Autocomplete-Argument                        -- KW["autocomplete"],
   Spellcheck-Argument                          -- KW["spellcheck"],
   Numeric-Argument                             -- KW["numeric"],
   DefaultSF-Argument                           -- KW["default"],
   SearchMapping                                -- V[V is=2[H[KW["search mapping"] _1 KW["{"]] _2] KW["}"]],
   SearchMapping.2:iter-star                    -- _1,
   SearchMappingEmbedded                        -- V[V is=2[H[KW["search mapping"] KW["{"]] _1] KW["}"]],
   SearchMappingEmbedded.1:iter-star            -- _1,
   SearchNamespaceMapping                       -- H hs=1[KW["namespace"] KW["by"] _1],
   SearchFieldMapping                           -- H hs=1[_1 _2 _3],
   SearchFieldMapping.1:iter-star               -- H hs=1[_1],
   FieldName                                    -- H hs=1[KW["as"] _1],
   AnalyzerName                                 -- H hs=1[KW["using"] _1],
   Boost                                        -- H hs=1[KW["^"] _1],
   QueryBoost                                   -- H hs=1[KW["^"] _1],
   EmbeddedDepth                                -- H hs=1[KW["with depth"] _1],
   TargetEntity                                 -- H hs=1[KW["for subclass"] _1],
   SearchMappingAnno                            -- H hs=1[KW["("] _1 KW[")"]],
   SearchMappingAnno.1:iter-star                -- H hs=1[_1],
   FullTextAnalyzer                             -- V[V is=2[H[_1 KW["analyzer"] _2 KW["{"]] _3] KW["}"]],
   DualFullTextAnalyzerBodyDef                  -- V[H[_1 KW["{"]] _2 KW["}"] H[_3 KW["{"]] _4 KW["}"]],
   FullTextAnalyzerBodyDef                      -- V[_1 _2 _3],
   FullTextAnalyzerBodyDef.1:iter-star          -- V[_1],
   FullTextAnalyzerBodyDef.3:iter-star          -- V[_1],
   CharFilter                                   -- H hs=1 [KW["char filter"] KW["="] _1 KW["("] _2 KW[")"]],
   CharFilter.2:iter-star-sep                   -- _1 KW[","],
   CharFilter.3:iter-star                       -- _1,
   CharFilterNoArgs                             -- H hs=1 [KW["char filter"] KW["="]_1],
   Tokenizer                                    -- H hs=1 [KW["tokenizer"] KW["="] _1 KW["("] _2 KW[")"]],
   Tokenizer.2:iter-star-sep                    -- _1 KW[","],
   Tokenizer.3:iter-star                        -- _1,
   TokenizerNoArgs                              -- H hs=1 [KW["tokenizer"] KW["="] _1],
   TokenFilter                                  -- H hs=1 [KW["token filter"] KW["="] _1 KW["("] _2 KW[")"]],
   TokenFilter.3:iter-star                      -- _1,
   TokenFilter.2:iter-star-sep                  -- _1 KW[","],
   TokenFilterNoArgs                            -- H hs=1 [KW["token filter"] KW["="] _1],
   Argument                                     -- H hs=1 [_1 KW["="] _2],

   SearcherInit                       -- H hs=1 [KW["search"] _1 _2],
   SearcherRefMod                     -- H hs=1 [KW["~"] _1 _2],
   QueryDef                           -- H hs=1 [KW["matching"] _1],
   Clause                             -- H hs=1 [_1 _2],
   Clause.2:iter                      -- _1,
   Clause.1:opt                       -- _1,
   Query                              -- H hs=1 [_1 _2],
   Query.1:opt                        -- _1,
   MatchAllQuery                      -- KW["*:*"],
   Start                              -- H hs=1 [KW["offset"] _1],
   MaxResults                         -- H hs=1 [KW["limit"] _1],
   SortBy                             -- H hs=1 [KW["order"] KW["by"] _1],
   SortBy.1:iter-star                 -- _1,
   ConstraintFilter                   -- H hs=1 [KW["with"] KW["filters"] _1],
   ConstraintFilter.1:iter-star       -- _1,
   FacetDef                           -- H hs=1 [KW["with"] KW["facets"] _1],
   FacetDef.1:iter-star               -- _1,
   DiscreteFacetDef                   -- H hs=1 [_1 KW["("] _2 KW[")"]],
   RangeFacetDef                      -- H hs=1 [_1 KW["("] _2 KW[")"]],
   RangeFacetDef.2:iter-star-sep      -- H hs=0 [_1 KW[","]],
   SearchAttributes                   -- H hs=1 [KW["["] _1 KW["]"]],
   SearchAttributes.1:iter-star-sep   -- H hs=0 [_1 KW[","]],
   NamespaceConstraint                -- H hs=1 [KW["in"] KW["namespace"] _1],
   NoLucene                           -- H hs=1 [KW["no lucene"]],
   Lucene                             -- H hs=1 [KW["lucene"]],
   DefaultAnd                         -- H hs=1 [KW["strict"] KW["matching"]],
   DefaultOr                          -- H hs=1 [KW["loose"] KW["matching"]],
   FieldFilterConstraint              -- H hs=1 [_1 KW[":"] _2],
   FieldsConstraint                   -- H hs=1 [_1 KW[":"]],
   FieldsConstraint.1:iter-star-sep   -- H hs=0 [_1 KW[","]],
   QuerySearchField					  -- H hs=0 [_1 _2],
   QuerySearchField.2:opt			  -- _1,
   QueryConstraint                    -- H hs=1 [_1],
   QueryConstraint.1:iter-star-sep    -- H hs=0 [_1 KW[","]],
   GroupDef                           -- H hs=0 [_1 KW["("] _2 KW[")"] _3],
   %% GroupDef.2:iter-star-sep           -- H hs=0 [_1 KW[","]],
   TermDef                            -- H hs=0 [_1 _2 _3],
   RangeDef                           -- H hs=1 [_1 _2],
   Slop                               -- H hs=1 [KW["~"]_1],
   Range                              -- H hs=1 [_1 _2 KW["to"] _3 _4],
   ExcludingOpen                      -- H hs=1 [KW["{"]],
   ExcludingClose                     -- H hs=1 [KW["}"]],
   IncludingOpen                      -- H hs=1 [KW["["]],
   IncludingClose                     -- H hs=1 [KW["]"]],
   Must                               -- H hs=1 [KW["+"]],
   MustNot                            -- H hs=1 [KW["-"]],
   SortDef                            -- H hs=1 [_1 _2],
   Ascending                          -- H hs=1 [KW["ascending"]],
   Descending                         -- H hs=1 [KW["descending"]],
   SearchResults                      -- H hs=1 [KW["results"] KW["from"] _1],
   FacetResults                       -- H hs=1 [_1 KW["facets"] KW["from"] _2],
   AllFacetResults                    -- H hs=1 [KW["all"] _1 KW["facets"] KW["from"] _2],
   SearchTimeString                   -- H hs=1 [KW["searchtime"] KW["from"] _1],
   SearchResultsSize                  -- H hs=1 [KW["count"] KW["from"] _1],
   HighlightTags                      -- H hs=1 [_1 _2 KW[":"] _3 KW["from"] _4 KW["with"] KW["tags"] KW["("] _5 KW[","] _6 KW[")"] ],
   Highlight                          -- H hs=1 [_1 _2 KW[":"] _3 KW["from"] _4 ],
   NormalHighlight                    -- H hs=1 [KW["highlight"]],
   HTMLHighlight                      -- H hs=1 [KW["highlightHTML"]],
   SearchFieldExp                     -- KW["~"] _1,
   Suggest                            -- H hs=1 [_1 _2 _3],
   Suggest.3:iter                     -- _1,
   AutoComplete                       -- H hs=1 [KW["completions"] ],
   SpellCheck                         -- H hs=1 [KW["corrections"] ],
   Similarity                         -- H hs=1 [KW["similarity"] _1],
   SuggestTerm                        -- H hs=1 [KW["matching"] _1 _2],
   WildCard                           -- H hs=1 [KW["*"]],
   SearchFieldPlain                   -- H hs=1 [_1],
   SearchFieldPlain                   -- H hs=1 [_1 KW["."] _2 ],

   SortDef.2:opt                                          -- _1,
   Range.3:opt                                            -- _1,
   RangeDef.1:opt                                         -- _1,
   TermDef.3:opt                                          -- _1,
   TermDef.1:opt                                          -- _1,
   GroupDef.2:iter                                        -- _1,
   GroupDef.1:opt                                         -- _1,
   QueryDef.1:iter-star                                   -- _1,
   SearcherRefMod.2:iter                                  -- _1,
   SearcherInit.2:iter-star                               -- _1,
   SearchFieldMapping.3:iter-star                         -- _1,
   FullTextAnalyzer.1:opt                                 -- _1,

%% Webdsl-Regex

   RegexId                   -- H hs=0 [ _1],
   DoubleQuote               -- H hs=0 [ KW["\""]],
   QuotedAtom                -- H hs=0 [ KW["\\Q"] _1 KW["\\E"]],
   Quoted                    -- H hs=0 [ KW["\\"] _1],
   Newline                   -- H hs=0 [ KW["\\n"]],
   Newline                   -- H hs=0 [ KW["\\n"]],
   Tab                       -- H hs=0 [ KW["\\t"]],
   Tab                       -- H hs=0 [ KW["\\t"]],
   WhiteSpace                -- H hs=0 [ KW["Space"]],
   WhiteSpaceChar            -- H hs=0 [ KW["\\s"]],
   NonWhiteSpaceChar         -- H hs=0 [ KW["\\S"]],
   Space                     -- H hs=0 [ KW["\\ "]],
   WhiteSpaceChar            -- H hs=0 [ KW["\\s"]],
   NonWhiteSpaceChar         -- H hs=0 [ KW["\\S"]],
   Space                     -- H hs=0 [ KW["\\ "]],
   BackReference             -- H hs=0 [ KW["\\"] _1],
   EndInputFinalBoundry      -- H hs=0 [ KW["\\z"]],
   EndInputBoundry           -- H hs=0 [ KW["\\Z"]],
   PrevMatchEndBoundry       -- H hs=0 [ KW["\\G"]],
   InputBeginBoundry         -- H hs=0 [ KW["\\A"]],
   NonWordBoundry            -- H hs=0 [ KW["\\B"]],
   WordBoundry               -- H hs=0 [ KW["\\b"]],
   NonWordBoundry            -- H hs=0 [ KW["\\B"]],
   WordBoundry               -- H hs=0 [ KW["\\b"]],
   NonWordBoundry            -- H hs=0 [ KW["\\B"]],
   ControlCharacter          -- H hs=0 [ KW["\\c"] _1],
   NonDigitChar              -- H hs=0 [ KW["\\D"]],
   DigitChar                 -- H hs=0 [ KW["\\d"]],
   NonDigitChar              -- H hs=0 [ KW["\\D"]],
   DigitChar                 -- H hs=0 [ KW["\\d"]],
   NonDigitChar              -- H hs=0 [ KW["\\D"]],
   NonWhiteSpaceChar         -- H hs=0 [ KW["\\S"]],
   WhiteSpaceChar            -- H hs=0 [ KW["\\s"]],
   NonWordChar               -- H hs=0 [ KW["\\W"]],
   WordChar                  -- H hs=0 [ KW["\\w"]],
   NonWordChar               -- H hs=0 [ KW["\\W"]],
   WordChar                  -- H hs=0 [ KW["\\w"]],
   NonWordChar               -- H hs=0 [ KW["\\W"]],
   Escape                    -- H hs=0 [ KW["\\e"]],
   Alarm                     -- H hs=0 [ KW["\\a"]],
   Formfeed                  -- H hs=0 [ KW["\\f"]],
   Return                    -- H hs=0 [ KW["\\r"]],
   DecHexChar                -- H hs=0 [ KW["\\u"] _1],
   HexHexChar                -- H hs=0 [ KW["\\x"] _1],
   OctalChar                 -- H hs=0 [ KW["\\0"] _1],
   CurrencySymbol            -- H hs=0 [ KW["Sc"]],
   UppercaseLetter           -- H hs=0 [ KW["Lu"]],
   GreekBlock                -- H hs=0 [ KW["InGreek"]],
   JavaIsMirrored            -- H hs=0 [ KW["javaMirrored"]],
   JavaIsWhitespace          -- H hs=0 [ KW["javaWhitespace"]],
   JavaIsLowerCase           -- H hs=0 [ KW["javaLowerCase"]],
   JavaIsLowerCase           -- H hs=0 [ KW["javaUpperCase"]],
   WhiteSpace                -- H hs=0 [ KW["Space"]],
   XDigitClass               -- H hs=0 [ KW["XDigit"]],
   CntrlClass                -- H hs=0 [ KW["Cntrl"]],
   BlankClass                -- H hs=0 [ KW["Blank"]],
   PrintClass                -- H hs=0 [ KW["Print"]],
   GraphClass                -- H hs=0 [ KW["Graph"]],
   PunctClass                -- H hs=0 [ KW["Punct"]],
   AlnumClass                -- H hs=0 [ KW["Alnum"]],
   DigitClass                -- H hs=0 [ KW["Digit"]],
   XDigitClass               -- H hs=0 [ KW["XDigit"]],
   AlphaClass                -- H hs=0 [ KW["Alpha"]],
   ASCIIClass                -- H hs=0 [ KW["ASCII"]],
   UpperClass                -- H hs=0 [ KW["Upper"]],
   LowerClass                -- H hs=0 [ KW["Lower"]],
   BracketCharacter          -- H hs=0 [ _1],
   BracketLiteral            -- H hs=0 [ _1],
   Union                     -- H hs=0 [ _1],
   Range.2:alt               -- H hs=0 [_1 _2],
   Range.1:alt               -- H hs=0 [_1 _2],
   Range                     -- H hs=0 [_1 KW["-"] _2],
   NegatedBracketList.1:iter -- H hs=0 [ _1],
   NegatedBracketList        -- H hs=0 [ KW["[^"] _1 KW["]"]],
   BracketList.1:iter        -- H hs=0 [ _1],
   BracketList               -- H hs=0 [ KW["["] _1 KW["]"]],
   QuotedAtom                -- H hs=1 [ KW["\\Q"] _1 KW["\\E"]],
   AtomCharacter             -- H hs=0 [ _1],
   AtomLiteral               -- H hs=0 [ _1],
   CharacterClass            -- H hs=0 [ _1],
   LineEnd                   -- H hs=0 [ KW["$"]],
   LineStart                 -- H hs=0 [ KW["^"]],
   SingleCharacter           -- H hs=0 [ KW["."]],
   RegexCapture              -- H hs=0 [ KW["("] _1 KW[")@{"] _2 KW["}"]],
   PythonCapture             -- H hs=0 [ KW["(?P<"] _1 KW[">"] _2 KW[")"]],
   NegativeLookbehind        -- H hs=0 [ KW["(?<!"] _1 KW[")"]],
   PositiveLookbehind        -- H hs=0 [ KW["(?<="] _1 KW[")"]],
   NegativeLookahead         -- H hs=0 [ KW["(?!"] _1 KW[")"]],
   PositiveLookahead         -- H hs=0 [ KW["(?="] _1 KW[")"]],
   NonCapture                -- H hs=0 [ KW["(?:"] _1 KW[")"]],
   Capture                   -- H hs=0 [ KW["("] _1 KW[")"]],
   NonCapture                -- H hs=0 [ KW["(?:"] _1 KW[")"]],
   PythonCapture             -- H hs=0 [ KW["(?P<"] _1 KW[">"] _2 KW[")"]],
   RegexCapture              -- H hs=0 [ KW["("] _1 KW[")@{"] _2 KW["}"]],
   PossessiveOneOrMore       -- H hs=0 [ KW["++"]],
   PossessiveZeroOrMore      -- H hs=0 [ KW["*+"]],
   PossessiveOnceOrNot       -- H hs=0 [ KW["?+"]],
   PossessiveLowerUpperBound -- H hs=0 [ KW["{"] _1 KW[","] _2 KW["}+"]],
   PossessiveLowerBound      -- H hs=0 [ KW["{"] _1 KW[","] KW["}+"]],
   PossessiveExactBound      -- H hs=0 [ KW["{"] _1 KW["}+"]],
   ReluctantOneOrMore        -- H hs=0 [ KW["+?"]],
   ReluctantZeroOrMore       -- H hs=0 [ KW["*?"]],
   ReluctantOnceOrNot        -- H hs=0 [ KW["??"]],
   ReluctantLowerUpperBound  -- H hs=0 [ KW["{"] _1 KW[","] _2 KW["}?"]],
   ReluctantLowerBound       -- H hs=0 [ KW["{"] _1 KW[","] KW["}?"]],
   ReluctantExactBound       -- H hs=0 [KW["{"] _1 KW["}?"]],
   GreedyOneOrMore           -- H hs=0 [KW["+"]],
   GreedyZeroOrMore          -- H hs=0 [KW["*"]],
   GreedyOnceOrNot           -- H hs=0 [KW["?"]],
   GreedyLowerUpperBound     -- H hs=0 [KW["{"] _1 KW[","] _2 KW["}"]],
   GreedyLowerBound          -- H hs=0 [KW["{"] _1 KW[","] KW["}"]],
   GreedyExactBound          -- H hs=0 [KW["{"] _1 KW["}"]],
   QuantifiedAtom            -- H hs=0 [_1 _2],
   SingleAtom                -- H hs=0 [_1],
   Pieces.1:iter             -- H hs=0 [_1],
   Pieces                    -- H hs=0 [_1],
   TupleBranch               -- H hs=0 [_1 KW["|"] _2],
   SingleBranch              -- H hs=0 [_1],
   RegexPattern              -- H hs=1 [ KW["/"] _1 KW["/"] ],

   ArgDefine.3:iter-star                                  -- _1,
   ArgDefine.2:iter-star-sep                              -- _1 KW[","],
   ArgDefine                                              -- _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   ArgDefine.2:iter-star-sep                              -- _1 KW[","],
   ArgDefine.3:iter-star                                  -- _1,
   TemplateWith                                           -- KW["with"] KW["{"] _1 KW["}"],
   TemplateWith.1:iter-star                               -- _1,
   TemplateBody                                           -- H[ KW["{"] _1 KW["}"] ],
   TemplateBody.1:iter-star                               -- V is=2[ _1 ],

   TemplateCase                                           --  V is=2[ H[KW["case"] KW["("] _1 KW[")"] KW["{"]] _2] KW["}"],
   TemplateCase.1:iter-star-sep                           -- _1 KW[","],
   TemplateCaseAlt                                        -- V [ H[_1 KW["{"]] _2] KW["}"],
   TemplateCaseAlt.1:iter-star-sep                        -- _1 KW[","],
   TemplateCaseAltDefault                                 -- V [ H[KW["default"] KW["{"]] _1] KW["}"],

   TemplateTypeCase                                       --  V is=2[ H[KW["typecase"] KW["("] _1 KW["as"] _2 KW[")"] KW["{"]] _3] KW["}"],
   TemplateTypeCaseAlt                                    -- V [ H[_1 KW["{"]] _2] KW["}"],
   TemplateTypeCaseDefault                             -- V [ H[KW["default"] KW["{"]] _1] KW["}"],

   NoSpan                                                 -- KW["no-span"],

   TemplateArgs                                           -- KW["requires"] _1,
   TemplateArgs.1:iter-star-sep                           -- H hs=0[ _1 KW[","] ],
   TemplateArg                                            -- H hs=0[ _1 KW["("] ] _2 KW[")"],
   TemplateArg.2:iter-star-sep                            -- H hs=0[ _1 KW[","] ],

   Define                                                 -- V[ V is=2[ H[ KW["define"] _1 H hs=0[ _2 KW["("] ] _3 KW[")"] _4 KW["{"] ] _5 ] KW["}"] ],
   Define.1:iter-star                                     -- _1,
   Define.3:iter-star-sep                                 -- H hs=0[ _1 KW[","] ],
   Define.5:iter-star                                     -- _1,
   DefinePage                                             -- V[ V is=2[ H[ _1 KW["page"] H hs=0[ _2 KW["("] ] _3 KW[")"] _4 KW["{"] ] _5 ] KW["}"] ],
   DefinePage.1:iter-star                                 -- _1,
   DefinePage.3:iter-star-sep                             -- H hs=0[ _1 KW[","] ],
   DefinePage.5:iter-star                                 -- _1,
   DefineTemplate                                         -- V[ V is=2[ H[ _1 KW["template"] H hs=0[ _2 KW["("] ] _3 KW[")"] _4 KW["{"] ] _5 ] KW["}"] ],
   DefineTemplate.1:iter-star                             -- _1,
   DefineTemplate.3:iter-star-sep                         -- H hs=0[ _1 KW[","] ],
   DefineTemplate.5:iter-star                             -- _1,
   ArgDefine                                              -- _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   ArgDefine.2:iter-star-sep                              -- _1 KW[","],
   ArgDefine.3:iter-star                                  -- _1,
   Placeholder                                            -- V is=2 [ H[ KW["placeholder"] _1 KW["{"] ] _2 ] KW["}"],
   Placeholder.2:iter-star                                -- _1,
   PlaceholderWithAjaxCall                                -- V is=2[ H[ KW["placeholder"] _1 ] _2 ],
   Placeholder                                            -- KW["placeholder"] KW["<"] _1 KW[">"] _2 KW["{"] _3 KW["}"],
   Placeholder.3:iter-star                                -- _1,
   PlaceholderWithAjaxCall                                -- V is=2 [ H[ KW["placeholder"] KW["<"] _1 KW[">"] _2 ] _3 ],
   PlaceholderVar                                         -- KW["placeholdervar"] _1,
   AjaxClear                                              -- KW["clear"] KW["("] _1 KW[")"],
   AjaxRestyle                                            -- KW["restyle"] KW["("] _1 KW[","] _2 KW[")"],
   AjaxRelocate                                           -- KW["relocate"] KW["("] _1 KW[")"],
   Hide                                                   -- KW["hide"],
   Toggle                                                 -- KW["toggle"],
   Show                                                   -- KW["show"],
   AjaxVisibility                                         -- KW["visibility"] KW["("] _1 KW[","] _2 KW[")"],
   AjaxAppend                                             -- KW["append"] KW["("] _1 KW[","] _2 KW[")"],
   AjaxReplace                                            -- KW["replace"] KW["("] _1 KW[","] _2 KW[")"],
   AjaxStatement                                          -- H[ _1 KW[";"] ],
   HqlQueryLimitOffset.1:parameterized-sort               -- _1 _2,
   HqlQueryLimit.1:parameterized-sort                     -- _1 _2,
   JSElement                                              -- H hs=0[KW["<"] KW["script"] _1 KW[">"] _2 KW["</"] KW["script"] KW[">"]],
   StyleElement                                           -- H hs=0[KW["<"] KW["style"] _1 KW[">"] _2 KW["</"] KW["style"] KW[">"]],
   JSString                                               -- _1,
   JSExp                                                  -- H hs=0[KW["~"] _1],
   JSTilde                                                -- KW["\\~"],

   PagedForAll                                            -- KW["for"] KW["("] _1 KW[":"] _2 _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForAll.5:iter-star                                -- _1,
   PagedForAllNoFilter                                    -- KW["for"] KW["("] _1 KW[":"] _2 KW["per"] _3 KW[")"] KW["{"] _4 KW["}"],
   PagedForAllNoFilter.4:iter-star                        -- _1,
   PagedFor                                               -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW["per"] _5 KW[")"] KW["{"] _6 KW["}"],
   PagedFor.6:iter-star                                   -- _1,
   PagedForNoFilter                                       -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForNoFilter.5:iter-star                           -- _1,


   ForStmt                                                -- V[H hs=1[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW[")"]] _5],
   ForStmtNoFilter                                        -- V[H hs=1[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"]] _4],
   ForAllStmt                                             -- V[H hs=1[KW["for"] KW["("] _1 KW[":"] _2 _3 KW[")"]] _4],
   ForAllStmtNoFilter                                     -- V[H hs=1[KW["for"] KW["("] _1 KW[":"] _2 KW[")"]] _3],
   ForCountStmt                                           -- V[H hs=1[KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"]] _4],
   WhileStmt                                              -- V[H hs=1[KW["while"] KW["("] _1 KW[")"]] _2],
   ForExp                                                 -- H hs=1[KW["["] _1 KW["|"] _2 KW[":"] _3 KW["in"] _4 _5 _6 KW["]"]],
   GroupBy                                                -- H hs=1[KW["group by"] _1],
   AndForExp                                              -- H hs=1[KW["And"] _1],
   OrForExp                                               -- H hs=1[KW["Or"] _1],
   For                                                    -- H hs=1[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW[")"] KW["{"] _5 KW["}"] _6],
   For.5:iter-star                                        -- _1,
   ForNoFilter                                            -- H hs=1[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"] KW["{"] _4 KW["}"] _5],
   ForNoFilter.4:iter-star                                -- _1,
   ForAll                                                 -- V is=2[ H [ H hs=0[ KW["for"] KW["("] ] H hs=0[ _1 KW[":"] ] _2 _3 H hs=0[ KW[")"] KW["{"] ] ] _4 ] KW["}"] _5,
   ForAll.4:iter-star                                     -- _1,
   ForCount                                               -- H hs=1[KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"] KW["{"] _4 KW["}"] _5],
   ForCount.4:iter-star                                   -- _1,
   ForSeparator                                           -- KW["separated-by"] KW["{"] _1 KW["}"],
   ForSeparator.1:iter-star                               -- _1,

   Dispatch                                               -- KW["dispatch"] KW["{"] _1 _2 KW["}"],
   Dispatch.1:iter-star                                   -- _1,
   DispatchEntry                                          -- _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   DispatchEntry.2:iter-star-sep                          -- _1 KW[","],
   DispatchEntry.3:iter-star                              -- _1,
   DispatchEntryNoArg                                     -- _1 KW["{"] _2 KW["}"],
   DispatchEntryNoArg.2:iter-star                         -- _1,
   DispatchEntity                                         -- _1 KW[":"] _2 KW["{"] _3 KW["}"],
   DispatchEntity.3:iter-star                             -- _1,
   DispatchDefault                                        -- KW["default"] KW["{"] _1 KW["}"],
   DispatchDefault.1:iter-star                            -- _1,
   DispatchNavigate                                       -- KW["navigate"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],
   DispatchNavigate.1:iter-sep                            -- _1 KW["/"],
   DispatchNavigate.2:iter-star                           -- _1,
   DispatchNavigateButton                                 -- KW["navigate"] KW["("] _1 KW[","] _2 KW[")"],
   DispatchNavigateButton.2:iter-sep                      -- _1 KW["/"],
   DispatchNavigateCall                                   -- _1 KW["("] _2 KW[")"],
   DispatchNavigateCall.2:iter-star-sep                   -- _1 KW[","],
   DispatchNavigateCallNoArg                              -- _1,


   IfNoElseTempl                                          -- V is=2[ H[ KW["if"] KW["("] _1 KW[")"] KW["{"] ] _2 ] KW["}"],
   IfNoElseTempl.2:iter-star                              -- _1,
   ElseTempl                                              -- V is=2[ H[ KW["else"] KW["{"] ] _1 ] KW["}"],
   ElseTempl.1:iter-star                                  -- _1,

   IfElseIfTempl                                          -- V is=2[ H[ H hs=0[ KW["if"] KW["("] ] _1 H hs=0[ KW[")"] KW["{"] ] ] _2 ] KW["}"] _3 _4,
   IfElseIfTempl.2:iter-star                              -- _1,
   IfElseIfTempl.3:iter                                   -- _1,
   IfElseIfTempl.4:opt                                    -- _1,
   ElseIfTempl                                            -- V is=2[ H[ KW["else"] H hs=0[ KW["if"] KW["("] ] _1 H hs=0[ KW[")"] KW["{"] ] ] _2 ] KW["}"],
   ElseIfTempl.2:iter-star                                -- _1,

   ValidationContext.1:iter-star                          -- _1,
   ValidationContext                                      -- KW["validationContext"] KW["{"] _1 KW["}"],
   ValidationContext.1:iter-star                          -- _1,
   Catch                                                  -- KW["catch"] KW["("] _1 KW[":"] _2 KW[")"] _3,
   TryTemplate.2:iter                                     -- _1,
   TryTemplate                                            -- KW["try"] _1 _2,
   TryTemplate.2:iter                                     -- _1,
   TryStatement.2:iter                                    -- _1,
   TryStatement                                           -- KW["try"] _1 _2,
   TryStatement.2:iter                                    -- _1,
   ThrowTemplate.1:iter-sep                               -- _1 KW[","],
   ThrowTemplate                                          -- V  [H  [KW["throw"]] _1],
   ThrowTemplate.1:iter-sep                               -- _1 KW[","],
   ThrowStatement.1:iter-sep                              -- _1 KW[","],
   ThrowStatement                                         -- KW["throw"] _1 KW[";"],
   ThrowStatement.1:iter-sep                              -- _1 KW[","],
   TypeValidate.2:iter-star                               -- _1,
   TypeValidate                                           -- KW["type"] _1 KW["{"] _2 KW["}"] KW["validate"] KW["("] _3 KW[","] _4 KW[")"],
   TypeValidate.2:iter-star                               -- _1,

   TestStart -- _1,

   TypeValidate                                           -- KW["validate"] KW["("] _1 KW[","] _2 KW[")"],
   TypeDef.2:iter-star                                    -- _1,
   TypeDef                                                -- H hs=1[KW["type"] _1 KW["{"] _2 KW["}"]],
   TypeDef.2:iter-star                                    -- _1,

   CountStar                                              -- KW["count"] KW["("] KW["*"] KW[")"],
   Count                                                  -- KW["count"] KW["("] _1 KW[")"],
   Max                                                    -- KW["max"] KW["("] _1 KW[")"],
   Min                                                    -- KW["min"] KW["("] _1 KW[")"],
   Avg                                                    -- KW["avg"] KW["("] _1 KW[")"],

   DeriveCrud -- KW["derive"] KW["CRUD"] _1,

   HqlStatement -- _1 KW[";"],
   NotNullAnno -- "not null",
   DefaultAnno -- KW["default="] _1,
   LengthAnno  -- KW["length="] _1,
   FormatAnno  -- KW["format="] _1,

   NativeClass -- V is=2[ H[ KW["native"] KW["class"] _1 _2 _3 KW["{"] ]  _4] KW["}"],
   NativeClassAlias -- KW["as"] _1,
   NativeClassProperty -- _1 KW[":"] _2,
   NativeClassFunction --H[ _1 H hs=0[ _2 KW["("] ] _3 H hs=0[ KW[")"] _4 ] ],
   NativeClassFunctionReturn -- H hs=1[ KW[":"] _1 ],
   NativeClassConstructor -- H[ H hs=0[ KW["constructor"] KW["("] ] _1 KW[")"] ],
   NativeClassConstructorFromStatic -- H[ _1 KW["as"] H hs=0[ KW["constructor"] KW["("] ] _2 KW[")"] ],
   NativeClassFunctionFromStatic -- H[ _1 KW["as"] _2 ],
   NativeClassSuper -- KW[":"] _1,
   NativeClassFunctionStatic -- KW["static"],
   NativeSimpleType -- _1,
   NativeGenericType -- _1 KW["<"] _2 KW[">"],
   NativeGenericType.2:iter-star-sep                      -- _1 KW[","],
   NativeClassConstructor.1:iter-star-sep                 -- _1 KW[","],
   NativeClassFunction.3:iter-star-sep                    -- _1 KW[","],
   NativeClass.4:iter-star                                -- _1,

   Test -- KW["test"] _1 _2,

   CollectionIndex -- _1 KW["["] _2 KW["]"],
   CollectionIndexAssignment -- _1 KW["["] _2 KW["]"] KW[":="] _3,

   RequestScope -- KW["request"] _1,
   RequestScopeTemplate -- KW["request"] _1,
   LocalScopeTemplate -- KW["local"] _1,

   NavigateCall                 -- V[ V is=2[ H [ KW["navigate"] _1 KW["["] _2 KW["]"] KW["{"] ] _3 ] KW["}"] ],
   NavigateCall.2:iter-star-sep -- H hs=0[ _1 KW[","] ],
   NavigateCall.3:iter-star     -- _1,

   PageCall                           -- H hs=0[_1 KW["("] H[_2] KW[")"]],
   PageCall.2:iter-star-sep           -- H hs=0[_1 KW[","]],
   PageCall.2:iter-star           -- _1,

   Submit -- KW["submit"] KW["("] _1 KW[","] _2 KW[")"] KW["["] _3 KW["]"],
   Submit.3:iter-star-sep -- _1 KW[","],
   Submit.3:iter-star           -- _1,
   SubmitLink -- KW["submitlink"] KW["("] _1 KW[","] _2 KW[")"] KW["["] _3 KW["]"],
   SubmitLink.3:iter-star-sep -- _1 KW[","],
   SubmitLink.3:iter-star           -- _1,

   SubmitElem                 -- V is=2[ KW["submit"] _1 KW["["] _2 KW["]"] KW["{"] _3 ] KW["}"],
   SubmitElem.2:iter-star-sep -- H hs=0[ _1 KW[","] ],
   SubmitElem.2:iter-star     -- _1,
   SubmitElem.3:iter-star-sep -- _1,
   SubmitElem.3:iter-star     -- _1,

   SubmitLinkElem                 -- V is=2[ KW["submitlink"] _1 H[ KW["["] _2 KW["]"] KW["{"] ] _3 ] KW["}"],
   SubmitLinkElem.2:iter-star-sep -- H hs=0[ _1 KW[","] ],
   SubmitLinkElem.2:iter-star     -- _1,
   SubmitLinkElem.3:iter-star-sep -- _1,
   SubmitLinkElem.3:iter-star     -- _1,

   ActionCall                           -- H hs=0[_1 KW["("] H[_2] KW[")"]],
   ActionCall.2:iter-star-sep           -- H hs=0[_1 KW[","]],
   ActionCall.2:iter-star           -- _1,

   GlobalVar -- H hs=0[KW["global"] KW["."] _1],
   SessionVar -- H hs=0[KW["session"] KW["."] _1],

   ValidateEntity -- H hs=0[ KW["validate"] KW["("] _1 KW[","] _2 KW[")"] ],

   TemplateCallPropertyAjax -- KW["ajax"],
   AjaxTemplate -- KW["ajax"],
   Weeks                                                  -- _1 KW["weeks"],
   Days                                                   -- _1 KW["days"],
   Hours                                                  -- _1 KW["hours"],
   Minutes                                                -- _1 KW["minutes"],
   Seconds                                                -- _1 KW["seconds"],
   Milliseconds                                           -- _1 KW["milliseconds"],
   TimeInterval                                           -- _1,
   TimeInterval.1:iter-star                               -- _1,
   InvokeEvery -- KW["invoke"] _1 KW["every"] _2,
   NotEmptyAnno -- KW["not empty"],
   PropertySubmit -- _1 KW["="] _2,
   PropertySubmitMultiple -- _1 KW["="] _2,
   PropertySubmitMultiple.2:iter-star-sep -- H hs=0[_1 KW[";"]],
   AjaxRunScript -- KW["runscript"] KW["("] _1 KW[")"],
   RefSort -- H hs=0[ KW["ref"] _1 ],
   AllAttributes -- KW["all attributes"],
   AllAttributeExceptExp -- KW["all attributes except"] _1,
   AttributesExp -- KW["attributes"] _1,
   DataBindAction -- KW["databind"] _1,
   RenderAction -- KW["render"] _1,
   AllPhasesAction -- KW["allphases"] _1,

   LocalRedefine -- KW["define"] _1 _2 KW["("] _3 KW[")"] KW["="] _4 _5,
   LocalRedefine.3:iter-star-sep           -- H hs=0[_1 KW[","]],
   LocalRedefine.3:iter-star           -- _1,

   LocalRedefineArgs -- KW["("] KW["*"] KW[","] _1 KW[")"],
   LocalRedefineArgs.1:iter-star-sep           -- H hs=0[_1 KW[","]],
   LocalRedefineArgs.1:iter-star           -- _1,

   AccessControlImportRules -- KW["apply ac rules"] _1 KW["("] _2 KW[")"],
   AccessControlImportRules.2:iter-star-sep       -- H hs=0[_1 KW[","]],
   AccessControlImportRules.2:iter-star           -- _1,

   AccessControlImportRulesArg -- _1,
   InternalSort -- _1,
   TypeDefAnno -- _1,

   XMLAttributesIfElse -- KW["if"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"] KW["else"] KW["{"] _3 KW["}"],
   XMLAttributesIf -- KW["if"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],

   RenderEmailFunctionCall -- KW["renderemail"] KW["("] _1 KW[")"],
   EmailFunctionCall -- KW["email"] KW["("] _1 KW[")"],
   SendEmailFunctionCall -- KW["sendemail"] KW["("] _1 KW[")"],
   EmailCall -- _1 KW["("] _2 KW[")"],
   EmailCall.2:iter-star-sep           -- H hs=0[_1 KW[","]],
   EmailCall.2:iter-star           -- _1,

   RenderTemplateFunctionCall -- KW["rendertemplate"] KW["("] _1 KW[")"],
   ValidateTemplateFunctionCall -- KW["validatetemplate"] KW["("] _1 KW[")"],

   TempateModSecure -- KW["secure"],
   TemplateModNotSecure -- KW["not-secure"],
   TemplateCallPropertySecure -- KW["secure"],
   TemplateCallPropertyNotSecure -- KW["not-secure"],
   TemplateCallPropertyIgnoreValidation -- KW["ignore-validation"],
   TemplateCallPropertyNotNull -- KW["not null"],
   TemplateCallPropertyNoLoadingFeedback -- KW["no loading feedback"],

   TemplateModSpan -- KW["span"],
   TemplateModInline -- KW["inline"],
   TemplateModOverride -- KW["override"],
   TemplateDeprecated -- KW["deprecated"],
   ReadOnlyPage -- KW["read-only"],
   ExpireCache -- KW["expire-cache"],

   ValidateAction -- KW["validate"] _1,

   QualifiedElementsCall -- _1 KW[".elements"],

   COMPLETION -- _1, %% this constructor can be added anywhere by Spoofax

   FunctionSort -- KW["function"] KW["("] _1 KW[")"] KW[":"] _2,
   FunctionSort.1:iter-star-sep -- H hs=0[_1 KW[","]],
   UnnamedArg -- _1,

   FunctionExp -- KW["function"] KW["("] _1 KW[")"] KW[":"] _2 _3,
   FunctionExp.1:iter-star-sep -- H hs=0[_1 KW[","]],

   FunctionRef -- KW["function."] _1 KW["("] _2 KW[")"] KW[":"] _3,
   FunctionRef.2:iter-star-sep -- H hs=0[_1 KW[","]],

   FunctionRefCall -- H hs=0[_1 KW["("] H[_2] KW[")"]],
   FunctionRefCall.2:iter-star-sep -- H hs=0[_1 KW[","]],

   FunctionRefCallPartial -- H hs=0[_1 KW["(*,"] H[_2] KW[")"]],
   FunctionRefCallPartial.2:iter-star-sep -- H hs=0[_1 KW[","]],

   OutputImage                                            -- KW["outputimage"] _1 KW["["] _2 KW["]"] KW["{"] _3 KW["}"],
   OutputImage.2:iter-star-sep                            -- _1 KW[","],
   OutputImage.3:iter-star                                -- _1,

   DownloadLink                                           -- KW["downloadlink"] _1 KW["["] _2 KW["]"] KW["{"] _3 KW["}"],
   DownloadLink.2:iter-star-sep                           -- _1 KW[","],
   DownloadLink.3:iter-star                               -- _1,

   LocalRedefine.1:iter-star                              -- _1,
   AjaxRefresh                                            -- KW["refresh"] KW["("] KW[")"],
%%   EventArg                                               -- _1 KW[":="] _2,
%%   EventCallElement.2:iter-star-sep                       -- _1 KW[","],
%%   EventCallElement                                       -- KW["event"] KW["("] _1 KW[","] KW["["] _2 KW["]"] KW[")"],
%%   EventCallElement.2:iter-star-sep                       -- _1 KW[","],
%%   EventCall.2:iter-star-sep                              -- _1 KW[","],
%%   EventCall                                              -- KW["event"] KW["("] _1 KW[","] KW["["] _2 KW["]"] KW[")"],
%%   EventCall.2:iter-star-sep                              -- _1 KW[","],
%%   EventCallElement                                       -- KW["event"] KW["("] _1 KW[","] KW["["] _2 KW["]"] KW[")"],
%%   EventCallElement.2:iter-star-sep                       -- _1 KW[","],
   HqlStatement.1:parameterized-sort                      -- _1 _2,
   IncompleteObjectPropertyAssignment                     -- _1,
   StaticEntityFunction.2:iter-star-sep                   -- _1 KW[","],
   HQLFunYear                                             -- KW["year"] KW["("] _1 KW[")"],
   HQLFunMonth                                            -- KW["month"] KW["("] _1 KW[")"],
   HQLFunDay                                              -- KW["day"] KW["("] _1 KW[")"],
   HQLFunHour                                             -- KW["hour"] KW["("] _1 KW[")"],
   HQLFunMinute                                           -- KW["minute"] KW["("] _1 KW[")"],
   HQLFunSecond                                           -- KW["second"] KW["("] _1 KW[")"],
   HQLFunCurTimestamp                                     -- KW["current_timestamp"] KW["("] KW[")"],
   HQLFunCurTime                                          -- KW["current_time"] KW["("] KW[")"],
   HQLFunCurTimestamp                                     -- KW["current_timestamp"] KW["("] KW[")"],
   HQLFunCurDate                                          -- KW["current_date"] KW["("] KW[")"],
   Modulo                                                 -- _1 KW["%"] _2,
   GE                                                     -- _1 KW[">="] _2,
   LE                                                     -- _1 KW["<="] _2,
   QuotedAliasedExpression.2:opt                          -- _1,
   QuotedAliasedExpression                                -- KW["'"] _1 _2 KW["'"],
   QuotedAliasedExpression.2:opt                          -- _1,
   SelectedPropertiesList.1:iter-sep                      -- _1 KW[","],
   SelectedPropertiesList                                 -- _1,
   SelectedPropertiesList.1:iter-sep                      -- _1 KW[","],
   Select.1:opt                                           -- _1,
   Selector                                               -- _1 _2,
   Selector.2:iter-star                                   -- _1,
   Selector.2:iter-star.1:seq                             -- _1 _2 _3,
   Selector.2:iter-star.1:seq.3:opt                       -- _1,
   SimpleSelector                                         -- _1 _2,
   IdSimpleSelector                                       -- KW["#"] _1,
   ElemSimpleSelector                                     -- _1,
   ElemSimpleAttrSelector                                 -- _1 _2,
   ElemSimpleAttrSelector.2:iter                          -- _1,
   ElemClassAttrSelector                                  -- _1 KW["."] _2 _3,
   ElemClassAttrSelector.3:iter                           -- _1,
   ClassSimpleSelector                                    -- KW["."] _1,
   SimpleSelector                                         -- _1,
   UniversalSimpleSelector                                -- KW["*"],
   SelectorAttribute                                      -- KW[":"] _1,
   SelectAnno                                             -- KW["select"] KW["="] _1,
   SelectFrom                                             -- _1 _2,
   SelectFrom.1:opt                                       -- _1,
   Select                                                 -- KW["select"] _1 _2,
   Select.1:opt                                           -- _1,
   SelectObject                                           -- KW["object"] KW["("] _1 KW[")"],
   SelectedPropertiesList                                 -- _1,
   SelectedPropertiesList.1:iter-sep                      -- _1 KW[","],
   DeleteStatement.2:opt                                  -- _1,
   DeleteStatement                                        -- KW["delete"] _1 _2,
   DeleteStatement.2:opt                                  -- _1,
   IdEmptyErrorAnno                                       -- KW["idemptyerror"] KW["="] _1,
   IdErrorAnno                                            -- KW["iderror"] KW["="] _1,
   CollationAnno                                          -- KW["collation"] KW["("] _1 KW[")"],
   IndexAnno                                              -- KW["index"] KW["("] KW[")"],
   IndexAnno                                              -- KW["index"] KW["("] _1 KW[")"],
   IndexAnno                                              -- KW["index"] KW["("] KW[")"],
   IndexAnno                                              -- KW["index"] KW["("] _1 KW[")"],
   AllowedAnno                                            -- KW["allowed"] KW["="] _1,
   IncompleteInverseAnno                                  -- KW["inverse"] KW["="] _1,
   CachedEntity                                           -- KW["cache"],
   PredicateInEntity.2:iter-star-sep                      -- _1 KW[","],
   PredicateInEntity                                      -- H[ KW["predicate"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"] ],
   PredicateInEntity.2:iter-star-sep                      -- _1 KW[","],
   XMLAttributesIfElse.3:iter-star                        -- _1,
   XMLAttributesIfElse.2:iter-star                        -- _1,
   XMLAttributesIf.2:iter-star                            -- _1,
   JSElement.2:iter-star                                  -- _1,
   JSElement.1:iter-star                                  -- _1,
   ServiceFunction                                        -- V[ H[KW["service"] _1 _2 KW["("] _3 KW[")"]] _4],
   ServiceFunction.3:iter-star-sep                        -- _1 KW[","],
   DeriveWebServices                                      -- KW["derive"] KW["webservices"] KW["for"] _1 KW[","] KW["with"] KW["nameproperty"] _2,
   SyncConfigEmbedded                                     -- V[ H[KW["synchronization"] KW["configuration"] KW["{"]] _1 KW["}"]],
   SyncTopLevelNameProperty                               -- H[ KW["toplevel"]  KW["name"] KW["property"] KW[":"] _1 ],
   SyncRestrictedProperties                               -- H[ KW["restricted"] KW["properties"] KW[";"] _1 ],
   SyncRestrictedProperties.1:iter-star-sep               -- _1 KW[","],
   SyncACRead                                             -- H[ KW["access"]  KW["read"] KW[":"] _1 ],
   SyncACWrite                                            -- H[ KW["access"]  KW["write"] KW[":"] _1 ],
   SyncACCreate                                           -- H[ KW["access"]  KW["create"] KW[":"] _1 ],
   NativeClassConstructorCall                             -- KW["/*"] _1 KW["*/"] _2 KW["("] _3 KW[")"], %% hack: putting _1 in comments, omitting it will cause the rule to match constructor with arity 2 instead of 3. this is an internal constructor used for desugaring
   NativeClassConstructorCall.3:iter-star-sep             -- _1 KW[","],

   PrefetchFor                                            -- H[KW["prefetch-for"] _1 _2 _3] _4,
   PrefetchChildren                                       -- V  [V is=2 [KW["{"] _1] KW["}"]],
   PrefetchChildren.1:iter-star                           -- _1,
   PrefetchNode                                           -- H[ H hs=0 [_1 _2] H hs=1 [_3] _4 _5 _6] _7,
   PrefetchNode.1:opt                                     -- _1 KW["."],
   NoEmptyBatch                                           -- KW["no-empty-batch"],
   FetchEarly                                             -- KW["fetch-early"],
   PrefetchIfDefault                                      -- H [KW["default"] KW["["] ] H hs=0 [_1] KW["]"],
   PrefetchIfDefault.1:iter-sep                           -- _1 KW[","],
   PrefetchTemplateArgs                                   -- H [KW["templates"] KW["["] ] H hs=0 [_1] KW["]"],
   PrefetchTemplateArgs.1:iter-sep                        -- _1 KW[","],
   PrefetchThis                                           -- KW["this"],
   PrefetchThisCast                                       -- H hs=1 [_1 KW["as"] _2],
   TemplateArgOrThis                                      -- _1 KW["("] _2 KW[")"],
   TemplateArgOrThis.2:iter-star-sep                      -- _1 KW[","],
   PrefetchCondition                                      -- H[ KW["if"] KW["("] _1 KW[")"]],
   PrefetchWhere                                          -- H[ KW["where"] H hs=1 [_1] KW["("] _2 KW[")"] ],
   Hint                                                   -- KW["hint"],
   RelativeFieldAccess                                    -- H hs=0 [_1 KW["."] _2],

   ForInferred.4:iter-star                                -- _1,
   ForInferred                                            -- H[ KW["for"] KW["("] _1 KW["in"] _2 _3 KW[")"] KW["{"] ] _4 KW["}"] _5,
   ForStmtInferred                                        -- H[ KW["for"] KW["("] _1 KW["in"] _2 _3 KW[")"] ] _4,

   GlobalVarDecl                                          -- KW["var"] _1 KW[":"] _2,
   GlobalVarDeclInitInferred                              -- KW["var"] _1 KW[":="] _2,
   GlobalVarDeclInit                                      -- KW["var"] _1 KW[":"] _2 KW[":="] _3,

   ResolvedRequireKey                                     -- _1, %% this internal constructor is put in the visible templatecall properties, it should be moved to the templatecall annotation

   Routing                                                -- KW["routing"] KW["{"] _1 KW["}"],
   RoutingReceive                                         -- KW["receive"] _1 _2,
   RoutingConstruct                                       -- KW["construct"] _1 _2,
   RoutingArgs                                            -- KW["("] _1 KW[")"],
   RoutingArgs.1:iter-sep                                 -- _1 KW[","],

   AttributeCollection                                    -- _1 KW["attributes"] _2 KW["{"] _3 KW["}"],
   AttributeAssign                                        -- _1 KW["="] _2,
   AttributeSelection                                     -- _1 KW["attributes"],
   AttributeInclude                                       -- _1 KW["attributes"] _2,
   AttributeIncludeIgnore                                 -- KW["ignore"] _1,
   AttributeIgnoreDefault                                 -- KW["ignore"] KW["default"] _1,
   AttributeCollectionOverride                            -- KW["override"],
   AttributeIgnore                                        -- KW["ignore"] _1 KW["attributes"],

   TemplateElementsArgument                               -- KW["{"] _1 KW["}"],
   TemplateElementsArgumentReplaced                       -- KW["{"] KW["}"],

   TemplateVarArgSort                                     -- KW["["] _1 KW["]"],
   TemplateVarArgSort.1:iter-star-sep                     -- _1 KW[","],
   TemplateVarArgSortInner                                -- KW["("] _1 KW[")"],
   TemplateVarArgSortInner.1:iter-star-sep                -- _1 KW[","],

   FormalVarArg                                           -- H[_1 KW[":"] _2],

   FieldAccessVarArgIndex                                 -- H hs=0[_1 KW["."] _2 KW["//"] _3 _4],

   MemberTemplateCall                                     -- _1 KW["."] _2,
   TemplateCallExpression                                 -- V[ V is=2[ H [ _1 KW["("] H[_2] KW[")"] KW["["] H[_3] KW["]"]] _4]],

   TemplateVarArgExp                                      -- KW["["] _1 KW["]"],
   TemplateVarArgExp.1:iter-star-sep                      -- _1 KW[","],

   ExpVarArg                                              -- KW["("] _1 KW[")"],
   ExpVarArg.1:iter-star-sep                              -- _1 KW[","],

   ExpVarArgFor                                           -- V is=2[H hs=1[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW[")"]] KW["{"] _5 KW["}"]],
   ExpVarArgFor.5:iter-star                               -- _1 KW[","],
   ExpVarArgForAll                                        -- V is=2[H hs=1[KW["for"] KW["("] _1 KW[":"] _2 _3 KW[")"]]  KW["{"] _4 KW["}"]],
   ExpVarArgForAll.4:iter-star                            -- _1 KW[","],
   ExpVarArgForCount                                      -- V is=2[H hs=1[KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"]]  KW["{"] _4 KW["}"]],
   ExpVarArgForCount.4:iter-star                          -- _1 KW[","],
   ExpVarArgForInferred                                   -- KW["for"] KW["("] _1 KW["in"] _2 _3 KW[")"] KW["{"] _4 KW["}"],
   ExpVarArgForInferred.4:iter-star                       -- _1 KW[","],

   HTMLWrapper                                            -- KW["htmlwrapper"] _1 _2 _3,
   HTMLWrapperAssigns                                     -- KW["["] _1 KW["]"],
   HTMLWrapperMultiple                                    -- KW["htmlwrapper"] KW["{"] _1 KW["}"],
   HTMLWrapperBody                                        -- _1 _2 _3,

   TemplateId                                             -- KW["id"],

   OutputShorthand                                        -- H hs=0[ KW["~"] _1 ],
   StringInterp                                           -- H hs=0[ KW["\""] _1 KW["\""] ],
   TextInterp                                             -- H hs=0[ KW["\""] _1 KW["\""] ],
   InterpExp                                              -- H hs=0[ KW["~"] _1 ],
   InterpTilde                                            -- KW["\~"]
]
