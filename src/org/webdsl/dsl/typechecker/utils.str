module org/webdsl/dsl/typechecker/utils

imports
  libstrategolib

imports
  libwebdsl-front

strategies

  type-of = eq-type-of

rules

  is-webdsl-type = is-entity-type <+ is-simple-sort <+ is-generic-sort <+ is-native-class-sort
  is-builtin-type = is-simple-sort <+ is-generic-sort
  is-entity-or-collection-type = not(is-simple-sort)

rules // type compatibility

  /**
   *  understandable alias of type-compatible
   */
  first-is-super-or-same-type = type-compatible

  /**
   *  <type-compatible> (t1,t2)
   *  t1 is super or same type as t2
   *  can also be equivalent type, such as String - Email, or Date - DateTime
   *  a value of type t2 can be assigned to a variable of type t1
   */

  type-compatible =
    ?(t, t)
    
  type-compatible =
    ?(<is-ref-type>,<is-ref-type>); !(<strip-ref-sort; strip-annos>, <strip-ref-sort; strip-annos>)
  ; type-compatible

  type-compatible =
    ?(supertype, subtypetobechecked) //(supertype,subtype to be checked)
    ; where(<subtype-of> (subtypetobechecked, supertype))
    
  subtype-of =
    eq

  subtype-of =
    ?(SimpleSort(subtypetobechecked), SimpleSort(supertype))
    ; where( <extends>(subtypetobechecked, supertype) )

  extends-check = Extends
  extends-check = extends-builtin
  extends-check = extends-genericsorts
  
  extends =
    while-not(eq, (extends-check, id))

rules // (front-end) types to (back-end) annotations

  // Add type of elements to AST
  type-to-annotation =
      where(sort := <type-of;topdown(add-type-annotations)>)
    ; add-anno(|TypeAnno(sort))
  
  // Add extra typing information to types in the AST
  type-to-annotation = 
     type-requires-default-anno
   ; add-type-annotations
     
  type-requires-default-anno = ?SimpleSort(_)
  type-requires-default-anno = ?GenericSort(_,_)
  
  add-type-annotations = repeat(add-type-annotation)

  /* General */
  add-type-annotation =
       ?type
     ; where(has-no-anno(?DefValueAnno(_)))
     ; def := <type-default-value> type
     ; anno := DefValueAnno(def)
     ; <add-anno(|anno)> type
     
  /* Entities */
  add-type-annotation =
      ?type@SimpleSort(name)
    ; where(has-no-anno(?EntityAnno(_,_,_)))
    ; is-entity-type
    ; with(
        idname := <EntityIdName <+ !None()> name
      ; superidname := <natural-id-name-include-superclass <+ !None()> name
      ; hasnatural := <HasNaturalId; !True() <+ !False()> name
      ; anno := EntityAnno(idname, superidname, hasnatural)
      ; <add-anno(|anno)> type
      ; ?x
    )
    ; !x
    
  // Annotate entities with type information.
  get-entity-class = ?Entity(<id>,_,_) <+ ?EntityNoSuper(<id>,_) <+ ?SessionEntity(<capitalize-string>,_)
  
  type-to-annotation =  
      ?entity
    ; class := <get-entity-class> entity
    ; <add-entity-anno(|class)> entity
   
  add-entity-anno(|class) =
        ?entity
      ; <add-type-annotations> SimpleSort(class)
      ; anno := TypeAnno(<id>)
      ; <add-anno(|anno)> entity
     
  /* For SimpleSort(name) remember whether name represents a native class */
  add-type-annotation =
      ?type@SimpleSort(name)
    ; where(has-no-anno(?NativeClassAnno(_,_)))
    ; class := <NativeClassQualifiedName> name         // fails if name is not a native class
    ; <add-anno(|NativeClassAnno(name, class))> type
  