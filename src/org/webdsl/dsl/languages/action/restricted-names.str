module org/webdsl/dsl/languages/action/restricted-names

imports
  libstrategolib
  libwebdsl-front

strategies

  /**
   *  specify restricted names with the disallow-name rule
   *  disallow-name : restrictedname -> explanation
   */
  disallow-name : "in" -> "'in' is the operator for testing containment of an element in a collection"

rules

  // args
  constraint-error-action = ?Define(_,_,<constraint-error-restricted-name-helper>,_,_) 
  constraint-error-action = ?Function(_,<constraint-error-restricted-name-helper>,_,_)
  constraint-error-action = ?Predicate(_,<constraint-error-restricted-name-helper>,_)
  constraint-error-action = ?Action(_,_,<constraint-error-restricted-name-helper>,_)

  // vars
  constraint-error-action = ?VarDecl(<constraint-error-restricted-name>,_)
  constraint-error-action = ?VarDeclInit(<constraint-error-restricted-name>,_,_)
  constraint-error-action = ?VarDeclInitInferred(<constraint-error-restricted-name>,_)
  constraint-error-action = ?TemplateVarDecl(<constraint-error-restricted-name>,_)
  constraint-error-action = ?TemplateVarDeclInit(<constraint-error-restricted-name>,_,_)
  constraint-error-action = ?TemplateVarDeclInitInferred(<constraint-error-restricted-name>,_)
  constraint-error-action = ?GlobalVarDecl(<constraint-error-restricted-name>,_)
  constraint-error-action = ?GlobalVarDeclInit(<constraint-error-restricted-name>,_,_)
  constraint-error-action = ?GlobalVarDeclInitInferred(<constraint-error-restricted-name>,_)
  constraint-error-action = ?Var(<constraint-error-restricted-name>)
  constraint-error-action = ?GlobalVar(<constraint-error-restricted-name>)

  constraint-error-restricted-name-helper :
    list@[x|xs] -> <fail>
    with  <map(try(?Arg(<id>,_);constraint-error-restricted-name))> list

  constraint-error-restricted-name:
    name -> <add-error(|["Name '",name,"' is not allowed, ",message])>
    where message := <strip-annos; disallow-name> name
