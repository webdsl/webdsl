/**

 Security rules for WebDSL

*/

module org/webdsl/dsl/languages/access-control/warning

imports
  libstrategolib
  libjava-front

imports
  libwebdsl-front
  org/webdsl/dsl/languages/access-control/-

strategies

  warn-for-unused-rules =
    where(with(
      <diff> (<bagof-AccessControlRuleDeclared>,<bagof-AccessControlRuleUsed>)
    ; remove-all(?AccessControlRule("action","*",_,_,_)) //remove "*" action rules, many are generated
    ; map(pretty-print-access-control-warning)
    ; (?[] <+ where(newline-for-ac-warnings-once;<debug> "Access control warning: unused rules: ");map(debug))
    ))

  warn-for-blocked-elements =
    try(
      ?(False(),type,ident,fargs)
    ; where(
        newline-for-ac-warnings-once
      ; <concat-strings;debug>
          ["Access control warning: access to element always denied: "
          ,<pretty-print-access-control-warning> AccessControlRule(type,ident,fargs,False(),[])
          ]
      )
    )

  newline-for-ac-warnings-once =
    where(
      if not(FirstACWarningShown)
      then <debug> ""
         ; rules(FirstACWarningShown := True())
      end
    )

  // don't show nested rules and simplify output
  pretty-print-access-control-warning :
    rule@AccessControlRule(checktype,matchstring,fargs,check,acrules) -> message
    with  location := <error-context-from-project-root> rule
        ; message := <concat-strings> [checktype," ",matchstring,"(",<pp-webdsl-to-string> fargs,") at ",location]
